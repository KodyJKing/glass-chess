{"version":3,"file":"index.pack.js","sources":["webpack:///webpack/bootstrap","webpack:///../platform/lib/data/Dependent.js","webpack:///../platform/lib/data/Entity.js","webpack:///../platform/lib/data/JSONPointer.js","webpack:///../platform/lib/data/Key.js","webpack:///../platform/lib/data/Model.js","webpack:///../platform/lib/data/Namespace.js","webpack:///../platform/lib/data/Patch.js","webpack:///../platform/lib/data/Query.js","webpack:///../platform/lib/data/Serializer.js","webpack:///../platform/lib/data/State.js","webpack:///../platform/lib/data/Store.js","webpack:///../platform/lib/data/Structure.js","webpack:///../platform/lib/data/defaultNamespace.js","webpack:///../platform/lib/data/schema/functions.js","webpack:///../platform/lib/data/schema/index.js","webpack:///../platform/lib/data/schema/schemas.js","webpack:///../platform/lib/data/schema/validate.js","webpack:///../platform/lib/data/stores/CompositeStore.js","webpack:///../platform/lib/data/stores/DefaultStore.js","webpack:///../platform/lib/data/stores/DependentStore.js","webpack:///../platform/lib/data/stores/HashStore.js","webpack:///../platform/lib/data/stores/LocalStore.js","webpack:///../platform/lib/data/stores/MemoryStore.js","webpack:///../platform/lib/data/stores/ServerStore.js","webpack:///../platform/lib/data/stores/SessionStore.js","webpack:///../platform/lib/data/stores/Table.js","webpack:///../platform/lib/model/FocusState.js","webpack:///../platform/lib/model/Identity.js","webpack:///../platform/lib/model/User.js","webpack:///../platform/lib/server/invoke.js","webpack:///../platform/lib/ui/Context.js","webpack:///../platform/lib/ui/html/HtmlElementFactory.js","webpack:///../platform/lib/ui/html/HtmlTextNodeFactory.js","webpack:///../platform/lib/ui/html/bindComponentToDom.js","webpack:///../platform/lib/ui/html/components/Input.js","webpack:///../platform/lib/ui/html/functions.js","webpack:///../platform/lib/ui/html/index.js","webpack:///../platform/lib/ui/input/WindowSize.js","webpack:///../platform/lib/ui/localize.js","webpack:///../platform/lib/ui/math/Plane.js","webpack:///../platform/lib/ui/math/Rectangle.js","webpack:///../platform/lib/ui/math/Vector2.js","webpack:///../platform/lib/ui/math/Vector3.js","webpack:///../platform/lib/ui/math/index.js","webpack:///../platform/lib/ui/sound/SoundContext.js","webpack:///../platform/lib/utility/DependencyTracker.js","webpack:///../platform/lib/utility/clonePatch.js","webpack:///../platform/lib/utility/common.js","webpack:///../platform/lib/utility/guid.js","webpack:///../platform/lib/utility/phone.js","webpack:///./lib/engine/Color.js","webpack:///./lib/engine/Engine.js","webpack:///./lib/engine/Move.js","webpack:///./lib/engine/Piece.js","webpack:///./lib/engine/Position.js","webpack:///./lib/engine/Type.js","webpack:///./lib/engine/bitfield.js","webpack:///./lib/engine/common.js","webpack:///./lib/engine/pieceValues.js","webpack:///./lib/engine/search.js","webpack:///./lib/model/Game.js","webpack:///./lib/www/index.js","webpack:///./lib/www/pieces/blackBishop.svg","webpack:///./lib/www/pieces/blackKing.svg","webpack:///./lib/www/pieces/blackKnight.svg","webpack:///./lib/www/pieces/blackPawn.svg","webpack:///./lib/www/pieces/blackQueen.svg","webpack:///./lib/www/pieces/blackRook.svg","webpack:///./lib/www/pieces/index.js","webpack:///./lib/www/pieces/whiteBishop.svg","webpack:///./lib/www/pieces/whiteKing.svg","webpack:///./lib/www/pieces/whiteKnight.svg","webpack:///./lib/www/pieces/whitePawn.svg","webpack:///./lib/www/pieces/whiteQueen.svg","webpack:///./lib/www/pieces/whiteRook.svg","webpack:///(webpack)/buildin/global.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/www/index.js\");\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst State_1 = __importDefault(require(\"./State\"));\r\nclass Dependent extends State_1.default {\r\n    static watched(key) {\r\n        throw new Error(`${this.name}.watched must be overriden`);\r\n    }\r\n}\r\nexports.default = Dependent;\r\nDependent.store = \"dependent\";\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"./Model\"));\r\nconst Key_1 = __importDefault(require(\"./Key\"));\r\nconst schema = __importStar(require(\"./schema\"));\r\nconst common_1 = require(\"../utility/common\");\r\nconst Patch_1 = require(\"./Patch\");\r\nconst Store_1 = __importDefault(require(\"./Store\"));\r\nlet Entity = class Entity extends Model_1.default {\r\n    /**\r\n     * Gets the key.id value.\r\n     */\r\n    get id() {\r\n        var _a, _b;\r\n        return _b = (_a = this.key) === null || _a === void 0 ? void 0 : _a.id, (_b !== null && _b !== void 0 ? _b : null);\r\n    }\r\n    /**\r\n     * Sets the key.id value. Only valid during construction.\r\n     */\r\n    set id(value) {\r\n        if (this.key != null) {\r\n            throw new Error(\"Key and id are immutable after construction\");\r\n        }\r\n        this.key = Key_1.default.create(this.constructor, value);\r\n    }\r\n    //  creates this Entity by patching it into the default store\r\n    create(store = Store_1.default.default) {\r\n        store.patch(this.key, this);\r\n        return this;\r\n    }\r\n    //  deletes this Entity from the default store\r\n    delete(store = Store_1.default.default) {\r\n        store.delete(this.key);\r\n        return null;\r\n    }\r\n    patch(value, descendant = this) {\r\n        let store = Store_1.default.default;\r\n        let path = common_1.getPath(this, descendant);\r\n        if (path == null) {\r\n            throw new Error(\"descendant not contained within this entity\");\r\n        }\r\n        let patch = Patch_1.createPatch(path, value);\r\n        store.patch(this.key, patch);\r\n        return store.get(this.key);\r\n    }\r\n};\r\nEntity.additionalProperties = {};\r\n__decorate([\r\n    Model_1.default.property(schema.key, {\r\n        required: true,\r\n        validate(value) {\r\n            if (value.type !== this.constructor)\r\n                return `key is of wrong type: ${value.schema.name}, expected: ${this.constructor.name}`;\r\n        },\r\n        id: \".\"\r\n    })\r\n], Entity.prototype, \"key\", void 0);\r\nEntity = __decorate([\r\n    Model_1.default.class()\r\n], Entity);\r\nexports.default = Entity;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Patch_1 = require(\"./Patch\");\r\nconst clonePatch_1 = __importDefault(require(\"../utility/clonePatch\"));\r\nfunction unescape(sequence) {\r\n    return sequence === \"~0\" ? \"~\" : \"/\";\r\n}\r\nfunction decode(step) {\r\n    return step.replace(/~[01]/g, unescape);\r\n}\r\nfunction escape(sequence) {\r\n    return sequence === \"~\" ? \"~0\" : \"~1\";\r\n}\r\nfunction encode(step) {\r\n    return typeof step === \"number\" ? step : step.replace(/[~\\/]/g, escape);\r\n}\r\nconst emptyArray = Object.freeze([]);\r\nfunction parse(jsonPointer) {\r\n    if (jsonPointer == null || jsonPointer.length === 0) {\r\n        return emptyArray;\r\n    }\r\n    let steps = jsonPointer.split(\"/\").map(decode);\r\n    if (steps[0] === \"\") {\r\n        steps.shift();\r\n    }\r\n    return steps;\r\n}\r\nexports.parse = parse;\r\nfunction stringify(pointer) {\r\n    return pointer.length === 0 ? \"\" : \"/\" + pointer.map(encode).join(\"/\");\r\n}\r\nexports.stringify = stringify;\r\nfunction get(document, pointer = emptyArray) {\r\n    let value = document;\r\n    for (let i = 0; value != null && i < pointer.length; i++) {\r\n        value = value[pointer[i]];\r\n    }\r\n    return value;\r\n}\r\nexports.get = get;\r\nfunction set(document, pointer = emptyArray, value) {\r\n    if (pointer.length === 0) {\r\n        return value;\r\n    }\r\n    let target = document;\r\n    for (let i = 0; target != null && i < pointer.length - 1; i++) {\r\n        target = target[pointer[i]];\r\n    }\r\n    if (target != null) {\r\n        let lastStep = pointer[pointer.length - 1];\r\n        if (value == null) {\r\n            delete target[lastStep];\r\n        }\r\n        else {\r\n            target[lastStep] = value;\r\n        }\r\n    }\r\n    return document;\r\n}\r\nexports.set = set;\r\nfunction patch(document, pointer = emptyArray, value) {\r\n    return pointer.length === 0 ? value : clonePatch_1.default(document, Patch_1.createPatch(pointer, value));\r\n}\r\nexports.patch = patch;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"./Model\"));\r\nconst Namespace_1 = require(\"./Namespace\");\r\nconst common_1 = require(\"../utility/common\");\r\nconst defaultNamespace_1 = __importDefault(require(\"./defaultNamespace\"));\r\nconst JSONPointer = __importStar(require(\"./JSONPointer\"));\r\nconst Patch_1 = require(\"./Patch\");\r\nconst guid_1 = __importDefault(require(\"../utility/guid\"));\r\nconst emptyQuery = Object.freeze({});\r\nfunction match(regex, map, text) {\r\n    let result = regex.exec(text);\r\n    if (result == null) {\r\n        return null;\r\n    }\r\n    let object = {};\r\n    for (let key in map) {\r\n        let index = map[key];\r\n        let value = result[index];\r\n        if (value != null) {\r\n            object[key] = value;\r\n        }\r\n    }\r\n    return object;\r\n}\r\n//                  (parent                    )     (type      )   (id       )       (query )\r\nconst keyRegex = /^((([^\\/\\?#]+\\/[^\\/\\?#]+\\/?)+)\\/)?(([^\\/\\?#]+)(\\/([^\\/\\?#]*))?)?(\\?(.*))?$/i;\r\nconst keyMap = {\r\n    parent: 2,\r\n    type: 5,\r\n    id: 7,\r\n    query: 9\r\n};\r\nfunction parse(key) {\r\n    let result = match(keyRegex, keyMap, key);\r\n    if (result == null) {\r\n        throw new Error(`Invalid key: ${key}`);\r\n    }\r\n    let { query } = result;\r\n    if (query) {\r\n        if (query[0] === \"{\") {\r\n            try {\r\n                result.query = JSON.parse(query);\r\n            }\r\n            catch (e) {\r\n                throw new Error(`Invalid key query: ${key}, ${e}`);\r\n            }\r\n        }\r\n        else {\r\n            result.query = { path: JSONPointer.parse(query) };\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction stringify(steps) {\r\n    let buffer = [];\r\n    for (let step of steps) {\r\n        if (Array.isArray(step)) {\r\n            // ?path/to/a/field => { path: [\"path\", \"to\", \"a\", \"field\"] }\r\n            step = { pointer: step };\r\n        }\r\n        if (common_1.isPlainObject(step)) {\r\n            //  query\r\n            buffer.push(\"?\", JSON.stringify(step));\r\n        }\r\n        else if (step != null) {\r\n            if (buffer.length > 0) {\r\n                buffer.push(\"/\");\r\n            }\r\n            if (Model_1.default.isSchema(step)) {\r\n                buffer.push(step.name);\r\n            }\r\n            else {\r\n                buffer.push(step.toString());\r\n            }\r\n        }\r\n    }\r\n    return buffer.join(\"\");\r\n}\r\nclass Key {\r\n    constructor(parent = null, schema = null, id = null, query = null, string = stringify([parent, schema, id, query])) {\r\n        // if parent is missing\r\n        if (!Model_1.default.isSchema(schema)) {\r\n            throw new Error(\"Type is not a valid model class: \" + schema);\r\n        }\r\n        this.parent = parent;\r\n        this.schema = schema;\r\n        this.type = Model_1.default.isClass(schema) ? schema : null;\r\n        this.id = id;\r\n        this.query = query != null ? query : emptyQuery;\r\n        this.string = string;\r\n        this.path = this.schema.name;\r\n        if (this.id) {\r\n            this.path += \"/\" + this.id;\r\n        }\r\n        if (this.parent) {\r\n            this.path = this.parent.path + \"/\" + this.path;\r\n        }\r\n        Object.freeze(this);\r\n    }\r\n    static isProbablyModelKey(value) {\r\n        if (value == null)\r\n            return false;\r\n        let slashes = 0;\r\n        let slashCode = \"/\".charCodeAt(0);\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (value.charCodeAt(i) === slashCode)\r\n                slashes++;\r\n        }\r\n        return (slashes % 2 === 1) && keyRegex.test(value);\r\n    }\r\n    static isSearchKey(value) {\r\n        return value instanceof Key && value.id == null;\r\n    }\r\n    static isModelKey(value) {\r\n        return value instanceof Key && value.id != null;\r\n    }\r\n    static create(...args) {\r\n        let parent = null;\r\n        let schema = null;\r\n        let id = null;\r\n        let query = null;\r\n        let i = 0;\r\n        if (Key.isModelKey(args[i])) {\r\n            parent = args[i++];\r\n        }\r\n        if (Model_1.default.isSchema(args[i])) {\r\n            schema = args[i++];\r\n        }\r\n        else {\r\n            throw new Error(\"Type is not a valid model class: \" + args[i]);\r\n        }\r\n        if (args[i] == null) {\r\n            id = guid_1.default();\r\n        }\r\n        if (typeof args[i] === \"string\") {\r\n            id = args[i++];\r\n        }\r\n        if (common_1.isPlainObject(args[i])) {\r\n            query = args[i++];\r\n        }\r\n        if (Array.isArray(args[i])) {\r\n            query = { path: args[i++] };\r\n        }\r\n        return new Key(parent, schema, id, query);\r\n    }\r\n    static parse(...steps) {\r\n        //  get namespace, possibly consuming first step\r\n        let namespace;\r\n        let first = steps[0];\r\n        if (Namespace_1.isNamespace(first)) {\r\n            namespace = first;\r\n            steps.shift();\r\n        }\r\n        else {\r\n            namespace = defaultNamespace_1.default;\r\n        }\r\n        //  get the text of the key\r\n        let text = stringify(steps);\r\n        //  parse it\r\n        let props = parse(text);\r\n        //  pull out the properties\r\n        let parent = null;\r\n        let type;\r\n        let id = null;\r\n        let query = null;\r\n        if (props.type) {\r\n            let foundType = namespace[props.type];\r\n            if (foundType == null) {\r\n                // console.log({ props, text, steps, namespace })\r\n                throw new Error(`Type not found in namespace: ${props.type}. Did you forget @Model.register()`);\r\n            }\r\n            type = foundType;\r\n        }\r\n        else {\r\n            throw new Error(\"Type is required\");\r\n        }\r\n        if (props.parent) {\r\n            parent = Key.parse(namespace, props.parent);\r\n        }\r\n        if (props.query) {\r\n            //  TODO: Really should completely normalize query\r\n            //  so that equivalent queries always match string format\r\n            if (props.query && common_1.isEmptyObject(props.query.where)) {\r\n                delete props.query.where;\r\n            }\r\n            query = common_1.deepFreeze(props.query);\r\n        }\r\n        if (props.id) {\r\n            id = props.id;\r\n        }\r\n        return new Key(parent, type, id, query);\r\n    }\r\n    get(model) {\r\n        return JSONPointer.get(model, this.query.path);\r\n    }\r\n    patch(modelOrValue, value) {\r\n        if (arguments.length == 1) {\r\n            return Patch_1.createPatch(this.query.path, modelOrValue);\r\n        }\r\n        else {\r\n            return JSONPointer.patch(modelOrValue, this.query.path, value);\r\n        }\r\n    }\r\n    isPossibleMatch(key) {\r\n        return this.type === key.type\r\n            && (this.parent && this.parent.string) === (key.parent && key.parent.string);\r\n    }\r\n    toString() {\r\n        return this.string;\r\n    }\r\n    toJSON() {\r\n        return this.string;\r\n    }\r\n}\r\nexports.default = Key;\r\nKey.regex = keyRegex;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst validate_1 = __importDefault(require(\"./schema/validate\"));\r\nconst Serializer = __importStar(require(\"./Serializer\"));\r\n/**\r\n * Base class for validated, immutable, objects.\r\n */\r\nclass Model {\r\n    constructor(...propertiesArray) {\r\n        let definedProperties = this.constructor.properties;\r\n        for (let properties of propertiesArray) {\r\n            for (let name in properties) {\r\n                let value = properties[name];\r\n                let definedProperty = definedProperties[name];\r\n                if (definedProperty && definedProperty.coerce != null) {\r\n                    value = definedProperty.coerce.call(this, value);\r\n                }\r\n                if (Model.ValidateAndFreezeOnConstruction) {\r\n                    Object.freeze(value);\r\n                }\r\n                if (definedProperty == null || definedProperty.default != /* deliberately untruthy */ value) {\r\n                    this[name] = value;\r\n                }\r\n            }\r\n        }\r\n        if (Model.ValidateAndFreezeOnConstruction) {\r\n            this.validate();\r\n            Object.freeze(this);\r\n        }\r\n    }\r\n    static isClass(value) {\r\n        return typeof value === \"function\" && value.name && value.properties != null;\r\n    }\r\n    static isSchema(value) {\r\n        return value != null && typeof value.name === \"string\" && typeof value.store === \"string\";\r\n    }\r\n    validate() {\r\n        let errors = validate_1.default(this.constructor, this, this, [this.constructor.name]);\r\n        if (errors.length > 0) {\r\n            throw new Error(errors.join(\",\\n\"));\r\n        }\r\n    }\r\n    //  Model class decorator \r\n    static class(...values) {\r\n        return function (target) {\r\n            //  register this Model for serialization\r\n            Model.serializer.register(target.name, target);\r\n            //  copy all schema properties to it.\r\n            Object.assign(target, ...values);\r\n            return target;\r\n        };\r\n    }\r\n    //  Model property decorator\r\n    static property(...values) {\r\n        let value = Object.assign({}, ...values);\r\n        // infer type from value if present\r\n        if (value.default && !value.type) {\r\n            value.type = typeof value.default;\r\n        }\r\n        return function (target, propertyName) {\r\n            // overwrite the name in a local copy of the value.\r\n            // we don't change it in the passed in values objects as they may\r\n            // be reused as schema args for different properties\r\n            value = Object.assign({}, value, { name: propertyName });\r\n            // ensure properties are extended from prototype class properties\r\n            if (!target.constructor.hasOwnProperty(\"properties\"))\r\n                target.constructor.properties = Object.create(target.__proto__.constructor.properties);\r\n            let properties = target.constructor.properties;\r\n            if (properties == null) {\r\n                throw new Error(`${target.constructor.name} is missing a properties object to contain schema definition for ${propertyName}`);\r\n            }\r\n            if (value.hasOwnProperty(\"default\")) {\r\n                target[propertyName] = Object.freeze(value.default);\r\n            }\r\n            properties[propertyName] = value;\r\n        };\r\n    }\r\n    static get serializer() {\r\n        return Serializer.default.default;\r\n    }\r\n}\r\nexports.default = Model;\r\nModel.store = \"session\";\r\nModel.properties = {};\r\nModel.ValidateAndFreezeOnConstruction = true; //typeof window !== \"undefined\"\r\nObject.freeze(Model.properties);\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"./Model\"));\r\nfunction isNamespace(value) {\r\n    for (let name in value) {\r\n        if (Model_1.default.isClass(value[name])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isNamespace = isNamespace;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction createPatch(path, object) {\r\n    if (path == null || path.length === 0) {\r\n        return object;\r\n    }\r\n    return createPatch(path.slice(0, -1), { [path[path.length - 1]]: object });\r\n}\r\nexports.createPatch = createPatch;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../utility/common\");\r\nconst functions_1 = require(\"./schema/functions\");\r\nconst ops = {\r\n    \"!=\": (a, b) => a != b,\r\n    \"=\": (a, b) => a == b,\r\n    \">\": (a, b) => a > b,\r\n    \"<\": (a, b) => a < b,\r\n    \">=\": (a, b) => a >= b,\r\n    \"<=\": (a, b) => a <= b,\r\n};\r\nfunction getPathValue(object, path) {\r\n    if (path != null && object != null) {\r\n        for (const step of path) {\r\n            object = object[step];\r\n            if (object == null) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return object;\r\n}\r\nexports.getPathValue = getPathValue;\r\nfunction createPredicate(query) {\r\n    return function (model) {\r\n        let where = query.where;\r\n        if (where != null) {\r\n            for (let name in where) {\r\n                let value = where[name];\r\n                if (common_1.isPlainObject(value)) {\r\n                    for (let op in value) {\r\n                        if (!ops[op](model[name], value[op]))\r\n                            return false;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!ops[\"=\"](model[name], value))\r\n                        return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n}\r\nexports.createPredicate = createPredicate;\r\nfunction compare(a, b) {\r\n    if (a === b)\r\n        return 0;\r\n    if (a == null)\r\n        return -1;\r\n    if (b == null)\r\n        return 1;\r\n    if (a.constructor !== b.constructor) {\r\n        a = a.constructor.name;\r\n        b = b.constructor.name;\r\n    }\r\n    return a < b ? -1 : +1;\r\n}\r\nfunction createSortCompareFunction(query) {\r\n    return (a, b) => {\r\n        if (query.sort) {\r\n            for (let sort of query.sort) {\r\n                for (let property in sort) {\r\n                    let direction = sort[property];\r\n                    let order = compare(functions_1.getValue(a, property), functions_1.getValue(b, property));\r\n                    if (order !== 0) {\r\n                        return direction ? order : -order;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n}\r\nexports.createSortCompareFunction = createSortCompareFunction;\r\nfunction isQuery(value) {\r\n    return common_1.isPlainObject(value) && (value.offset || value.limit || value.where || value.sort);\r\n}\r\nexports.isQuery = isQuery;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst defaultNamespace_1 = __importDefault(require(\"./defaultNamespace\"));\r\n// function pretraverse(key, object, visitor) {\r\n//     for (let childKey in object) {\r\n//         let value = object[childKey]\r\n//         if (value && typeof value === \"object\") {\r\n//             let change = pretraverse(childKey, value, visitor)\r\n//             if (value !== change) {\r\n//                 object[childKey] = change\r\n//             }\r\n//         }\r\n//     }\r\n//     object = visitor(key, object)\r\n//     return object\r\n// }\r\nfunction getId(constructor) {\r\n    var _a;\r\n    return _a = constructor.id, (_a !== null && _a !== void 0 ? _a : constructor.name);\r\n}\r\nexports.typeKey = \"\";\r\nexports.countKey = \"$\";\r\n//  we are not using the JSON replacer or reviver because our minimal traversal is more efficent\r\n//  when parsing and we need a custom traversal when stringifying\r\nclass Serializer {\r\n    constructor(namespace = {}, options = {}) {\r\n        this.namespace = namespace;\r\n        this.indent = options.indent || 0;\r\n        this.parse = this.parse.bind(this);\r\n        this.stringify = this.stringify.bind(this);\r\n    }\r\n    parse(text) {\r\n        let { namespace } = this;\r\n        // this pretraversal revive function is much faster than using the built in JSON.parse reviver\r\n        let root = typeof text === \"object\" ? text : JSON.parse(text);\r\n        function pretraverse(key, object) {\r\n            let typeName = object[exports.typeKey];\r\n            let childCount = object[exports.countKey] || 0;\r\n            if (typeName == null || childCount > 0) {\r\n                for (let childKey in object) {\r\n                    let value = object[childKey];\r\n                    if (value && typeof value === \"object\") {\r\n                        let change = pretraverse(childKey, value);\r\n                        if (value !== change) {\r\n                            object[childKey] = change;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (typeName) {\r\n                delete object[exports.typeKey];\r\n                delete object[exports.countKey];\r\n                let modelConstructor = namespace[typeName];\r\n                if (modelConstructor == null) {\r\n                    console.log(\"********************************************\");\r\n                    console.log(Object.keys(namespace).join(\" : \"));\r\n                    console.log(\"********************************************\");\r\n                    throw new Error(`Class not found in namespace: ${typeName}`);\r\n                }\r\n                if (modelConstructor.parse) {\r\n                    object = modelConstructor.parse(object);\r\n                }\r\n                else {\r\n                    object = new modelConstructor(object);\r\n                }\r\n            }\r\n            return object;\r\n        }\r\n        if (root != null && typeof root === \"object\") {\r\n            root = pretraverse(\"\", root);\r\n        }\r\n        return root;\r\n    }\r\n    stringify(root) {\r\n        root = this.toJSON(root);\r\n        return JSON.stringify(root, null, this.indent > 0 ? this.indent : undefined);\r\n    }\r\n    toJSON(root) {\r\n        let { namespace } = this;\r\n        let encodedTypeCount = 0;\r\n        function pretraverse(key, object) {\r\n            if (object.toJSON) {\r\n                return object.toJSON();\r\n            }\r\n            // we CAN NOT mutate the input object so we will copy it\r\n            let output = Array.isArray(object) ? object.slice(0) : { ...object };\r\n            let initialTypeCount = encodedTypeCount;\r\n            for (let childKey in object) {\r\n                let value = object[childKey];\r\n                if (value && typeof value === \"object\") {\r\n                    output[childKey] = pretraverse(childKey, value);\r\n                }\r\n            }\r\n            let id = getId(object.constructor);\r\n            if (object != null && typeof object === \"object\" && namespace.hasOwnProperty(id)) {\r\n                let encodedChildrenCount = encodedTypeCount - initialTypeCount;\r\n                encodedTypeCount++;\r\n                let modelConstructor = object.constructor;\r\n                output = { [exports.typeKey]: getId(modelConstructor), ...output };\r\n                if (encodedChildrenCount > 0) {\r\n                    output[exports.countKey] = 1;\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        if (root != null && typeof root === \"object\") {\r\n            root = pretraverse(\"\", root);\r\n        }\r\n        return root;\r\n    }\r\n    register(name, type) {\r\n        this.namespace[name] = type;\r\n    }\r\n}\r\nexports.default = Serializer;\r\nSerializer.default = new Serializer(defaultNamespace_1.default);\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"./Model\"));\r\n/**\r\n * State represents any Model which will always have a default value.\r\n * When\r\n */\r\nclass State extends Model_1.default {\r\n    get isDefault() {\r\n        //  the real reason this property is here is so that the compiler will distinguish\r\n        //  Model from State. Otherwise the overloaded methods on IStateSource.peek and get\r\n        //  will treat all Model instances as if they are State instances.\r\n        return this === this.constructor._default;\r\n    }\r\n    static get default() {\r\n        if (this._default == null)\r\n            this._default = new this();\r\n        return this._default;\r\n    }\r\n}\r\nexports.default = State;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Key_1 = __importDefault(require(\"./Key\"));\r\n/**\r\n * Store is the low level asynchronous model saving and loading interface.\r\n */\r\nclass Store {\r\n    peek(key) {\r\n        return this.get(key, true);\r\n    }\r\n    delete(key) {\r\n        if (Key_1.default.isSearchKey(key)) {\r\n            key = this.get(key);\r\n            if (key == null) {\r\n                throw new Error(\"Could not get keys to delete\");\r\n            }\r\n        }\r\n        if (Array.isArray(key)) {\r\n            for (let k of key) {\r\n                this.patch(k, null);\r\n            }\r\n        }\r\n        else {\r\n            this.patch(key, null);\r\n        }\r\n    }\r\n    list(key, peek) {\r\n        let items = [];\r\n        let keys = this.get(key, peek);\r\n        if (keys == null) {\r\n            return undefined;\r\n        }\r\n        for (let itemKey of keys) {\r\n            let item = this.get(itemKey, peek);\r\n            if (item != null) {\r\n                items.push(item);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    watchListener(key) {\r\n        let value = this.peek(key);\r\n        if (value === undefined) {\r\n            value = null;\r\n        }\r\n        let watchers = this.watchers.get(key.string);\r\n        if (watchers != null) {\r\n            for (let watcher of watchers.values()) {\r\n                let value = this.peek(key);\r\n                if (value === undefined) {\r\n                    value = null;\r\n                }\r\n                watcher(value != null ? value : null);\r\n            }\r\n        }\r\n    }\r\n    watch(key, callback) {\r\n        if (this.watchers == null) {\r\n            this.watchers = new Map();\r\n            this.addWriteListener(this.watchListener.bind(this));\r\n        }\r\n        let keyWatchers = this.watchers.get(key.string);\r\n        if (keyWatchers == null) {\r\n            this.watchers.set(key.string, keyWatchers = new Set());\r\n        }\r\n        keyWatchers.add(callback);\r\n        let value = this.peek(key);\r\n        if (value !== undefined) {\r\n            callback(value);\r\n        }\r\n        return () => {\r\n            keyWatchers.delete(callback);\r\n        };\r\n    }\r\n    static get default() {\r\n        return Store._default;\r\n    }\r\n    static set default(value) {\r\n        Store._default = value;\r\n    }\r\n}\r\nexports.default = Store;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Serializer_1 = __importDefault(require(\"./Serializer\"));\r\nclass Structure {\r\n    static parse(properties) {\r\n        return Object.assign(Object.create(this.prototype), properties);\r\n    }\r\n    //  Structure class decorator \r\n    static class(properties) {\r\n        return function (target) {\r\n            var _a, _b;\r\n            //  register this Model for serialization\r\n            Serializer_1.default.default.register((_b = (_a = properties) === null || _a === void 0 ? void 0 : _a.id, (_b !== null && _b !== void 0 ? _b : target.name)), target);\r\n            return target;\r\n        };\r\n    }\r\n}\r\nexports.default = Structure;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst defaultNamespace = {};\r\nexports.default = defaultNamespace;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getSubSchemaInternal(schema, property) {\r\n    if (schema != null && property != null) {\r\n        if (Array.isArray(property)) {\r\n            for (let step of property) {\r\n                schema = getSubSchemaInternal(schema, step);\r\n                if (schema == null) {\r\n                    break;\r\n                }\r\n            }\r\n            return schema;\r\n        }\r\n        else {\r\n            if (schema.properties) {\r\n                let subSchema = schema.properties[property];\r\n                if (subSchema) {\r\n                    return subSchema;\r\n                }\r\n            }\r\n            if (schema.additionalProperties) {\r\n                return schema.additionalProperties;\r\n            }\r\n            if (schema.items) {\r\n                if (Array.isArray(schema.items)) {\r\n                    let subSchema = schema.items[property];\r\n                    if (subSchema) {\r\n                        return subSchema;\r\n                    }\r\n                }\r\n                else {\r\n                    return schema.items;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction getSubSchema(schema, property) {\r\n    property = getArrayIfPropertyIsDotDelimitedPath(property);\r\n    return getSubSchemaInternal(schema, property);\r\n}\r\nexports.getSubSchema = getSubSchema;\r\nfunction getValueInternal(object, property) {\r\n    if (object == null || property == null) {\r\n        return undefined;\r\n    }\r\n    if (Array.isArray(property)) {\r\n        for (let step of property) {\r\n            object = object[step];\r\n            if (object == null) {\r\n                break;\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n    else {\r\n        return object[property];\r\n    }\r\n}\r\nfunction getArrayIfPropertyIsDotDelimitedPath(property) {\r\n    if (typeof property === \"string\") {\r\n        if (property.indexOf(\".\") >= 0) {\r\n            property = property.split(\".\");\r\n        }\r\n    }\r\n    return property;\r\n}\r\nfunction getValue(object, property) {\r\n    property = getArrayIfPropertyIsDotDelimitedPath(property);\r\n    return getValueInternal(object, property);\r\n}\r\nexports.getValue = getValue;\r\n","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./schemas\"));\r\n__export(require(\"./validate\"));\r\n__export(require(\"./functions\"));\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Key_1 = __importDefault(require(\"../Key\"));\r\nconst Input_1 = __importDefault(require(\"../../ui/html/components/Input\"));\r\nconst phone_1 = require(\"../../utility/phone\");\r\nfunction renderInput(c, props, type) {\r\n    let { id, schema, value, oncancel, onconfirm } = props;\r\n    let { name, required, validate, validateFailMessage } = schema;\r\n    let inputProperties = {\r\n        type,\r\n        id,\r\n        name,\r\n        required,\r\n        validate,\r\n        validateFailMessage,\r\n        oncancel,\r\n        onconfirm,\r\n        autocomplete: false\r\n    };\r\n    if (props.value) {\r\n        inputProperties.value = value;\r\n    }\r\n    if (props.focus) {\r\n        inputProperties.autofocus = true;\r\n    }\r\n    if (props.select) {\r\n        inputProperties.autoselect = true;\r\n    }\r\n    if (schema.description || schema.patternDescription) {\r\n        inputProperties.title = schema.description || schema.patternDescription;\r\n    }\r\n    if (schema.pattern) {\r\n        inputProperties.pattern = schema.pattern.source;\r\n    }\r\n    Input_1.default(inputProperties);\r\n}\r\nexports.object = {\r\n    type: \"object\"\r\n};\r\nexports.array = {\r\n    type: \"array\"\r\n};\r\nexports.boolean = {\r\n    type: \"boolean\"\r\n};\r\nexports.string = {\r\n    type: \"string\",\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"text\");\r\n    },\r\n    coerce(value) {\r\n        return `${value}`.trim();\r\n    }\r\n};\r\nexports.number = {\r\n    type: \"number\",\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"number\");\r\n    }\r\n};\r\nexports.integer = {\r\n    type: \"number\",\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"number\");\r\n    }\r\n};\r\nexports.name = {\r\n    ...exports.string,\r\n    title: \"Name\"\r\n};\r\nexports.password = {\r\n    ...exports.string,\r\n    title: \"Password\",\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"password\");\r\n    }\r\n};\r\nexports.phone = {\r\n    ...exports.string,\r\n    format: \"phone\",\r\n    pattern: /\\+\\d \\(\\d{3}\\) \\d{3}-\\d{4}/,\r\n    minLength: 8,\r\n    maxLength: 20,\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"tel\");\r\n    },\r\n    coerce: phone_1.formatPhoneNumberUSA\r\n};\r\nexports.date = {\r\n    ...exports.string,\r\n    format: \"date\",\r\n    pattern: /^\\d{4}-(0[1-9]|10|11|12)-(0[1-9]|[1-2][0-9]|30|31)$/,\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"date\");\r\n    }\r\n};\r\nexports.datetime = {\r\n    ...exports.number,\r\n    format: \"date-time\",\r\n    // pattern: /^\\d{4}-(0[1-9]|10|11|12)-(0[1-9]|[1-2][0-9]|30|31)T(([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-9][0-9](\\.[0-9]{1,3}Z?)?)|24:00:00$/,\r\n    coerce(value) {\r\n        if (typeof value === \"string\") {\r\n            value = Date.parse(value);\r\n        }\r\n        return value;\r\n    },\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"datetime-local\");\r\n    }\r\n};\r\nexports.email = {\r\n    ...exports.string,\r\n    title: \"Email\",\r\n    format: \"email\",\r\n    pattern: /^[^@]+@[^@\\.]+(\\.[^@\\.]+)+$/,\r\n    patternDescription: \"name@address.com\",\r\n    maxLength: 200,\r\n    createInput(c, props) {\r\n        renderInput(c, props, \"email\");\r\n    }\r\n};\r\nexports.key = {\r\n    format: \"key\",\r\n    type: Key_1.default,\r\n    pattern: Key_1.default.regex,\r\n    coerce(value) {\r\n        if (typeof value === \"string\") {\r\n            value = Key_1.default.parse(value);\r\n        }\r\n        return value;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst functions_1 = require(\"./functions\");\r\nfunction isValidType(type, value) {\r\n    if (typeof type === \"string\") {\r\n        let actualType = typeof value;\r\n        switch (type) {\r\n            case \"array\": return Array.isArray(value);\r\n            case \"integer\": return actualType === \"number\" && Number.isInteger(value);\r\n            case \"null\": return value == null;\r\n            default: return actualType === type;\r\n        }\r\n    }\r\n    else {\r\n        return type === value.constructor;\r\n    }\r\n}\r\nfunction isValidPattern(pattern, value) {\r\n    let regex = typeof pattern === \"string\" ? new RegExp(pattern) : pattern;\r\n    let result = regex.exec(value);\r\n    if (!result || result[0].length !== value.length)\r\n        return false;\r\n    return true;\r\n}\r\nfunction validate(schema, value, root = value, path = [], errors = []) {\r\n    let { type, properties, format, pattern, required = false } = schema;\r\n    let { minimum, maximum, minLength, maxLength, minItems, maxItems } = schema;\r\n    if (value === undefined) {\r\n        if (required)\r\n            errors.push(`${path.join(\".\")} is required`);\r\n    }\r\n    else {\r\n        if (schema.validate) {\r\n            let result = schema.validate.call(root, value);\r\n            let success = result === undefined || result === true;\r\n            if (!success) {\r\n                let message = typeof result === \"string\" ? result : `${path.join(\".\")} failed custom validate`;\r\n                errors.push(message);\r\n            }\r\n        }\r\n        if (schema.not && validate(schema.not, value, root, path).length === 0)\r\n            errors.push(`${path.join(\".\")} matched a not schema`);\r\n        if (schema.allOf)\r\n            throw new Error(\"Schema.allOf is not implemented\");\r\n        if (schema.anyOf)\r\n            throw new Error(\"Schema.anyOf is not implemented yet\");\r\n        if (type != null) {\r\n            if (Array.isArray(type)) {\r\n                let valid = false;\r\n                for (let item of type) {\r\n                    if (isValidType(item, value)) {\r\n                        valid = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!valid) {\r\n                    errors.push(`${path.join(\".\")} is not valid type: ${type.join('|')}`);\r\n                }\r\n            }\r\n            else if (!isValidType(type, value)) {\r\n                errors.push(`${path.join(\".\")} is not valid type: ${type}`);\r\n            }\r\n        }\r\n        if (value != null) {\r\n            if (properties) {\r\n                //  iterate each property in the definition\r\n                for (let key in properties) {\r\n                    let propertySchema = properties[key] || schema.additionalProperties;\r\n                    path.push(key);\r\n                    if (propertySchema) {\r\n                        validate(propertySchema, value[key], root, path, errors);\r\n                    }\r\n                    path.pop();\r\n                }\r\n                //  iterate each property in the value\r\n                for (let key in value) {\r\n                    let propertySchema = properties[key];\r\n                    if (propertySchema)\r\n                        continue; // we already tested this\r\n                    propertySchema = schema.additionalProperties;\r\n                    path.push(key);\r\n                    if (!propertySchema) {\r\n                        errors.push(`additional properties are not allowed: (${path.join(\".\")})`);\r\n                    }\r\n                    else {\r\n                        validate(propertySchema, value[key], root, path, errors);\r\n                    }\r\n                    path.pop();\r\n                }\r\n            }\r\n            if (schema.const && schema.const !== value)\r\n                errors.push(`${path.join(\".\")} (${value}) is not required value: ${schema.const}`);\r\n            if (schema.enum && !schema.enum.includes(value))\r\n                errors.push(`${path.join(\".\")} (${value}) is not a member of enum.`);\r\n            if (typeof value === \"number\") {\r\n                if (minimum !== undefined && value < minimum)\r\n                    errors.push(`${path.join(\".\")} (${value}) is less than minimum: ${minimum}`);\r\n                if (maximum !== undefined && value > maximum)\r\n                    errors.push(`${path.join(\".\")} (${value}) is greater than: ${maximum}`);\r\n            }\r\n            else if (typeof value === \"string\") {\r\n                if (pattern && !isValidPattern(pattern, value))\r\n                    errors.push(`${path.join(\".\")} (${value}) is not valid pattern: ${pattern}`);\r\n                if (minLength !== undefined && value.length < minLength)\r\n                    errors.push(`${path.join(\".\")} (${value}) is shorter than: ${minLength}`);\r\n                if (maxLength !== undefined && value.length > maxLength)\r\n                    errors.push(`${path.join(\".\")} (${value}) is longer than: ${maxLength}`);\r\n            }\r\n            else if (Array.isArray(value)) {\r\n                if (minItems !== undefined && value.length < minItems)\r\n                    errors.push(`${path.join(\".\")} (${value}) contains fewer items than: ${minItems}`);\r\n                if (maxItems !== undefined && value.length > maxItems)\r\n                    errors.push(`${path.join(\".\")} (${value}) contains more items than: ${maxItems}`);\r\n                if (schema.items || schema.additionalItems) {\r\n                    for (let i = 0; i < value.length; i++) {\r\n                        let itemSchema = functions_1.getSubSchema(schema, i);\r\n                        path.push(String(i));\r\n                        if (itemSchema) {\r\n                            validate(itemSchema, value[i], root, path, errors);\r\n                        }\r\n                        else {\r\n                            //  in a restriction beyond spec, we require a valid schema for additionalItems\r\n                            //  if items array is specified\r\n                            errors.push(`${path.join(\".\")} does not allow additional items`);\r\n                        }\r\n                        path.pop();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\nexports.default = validate;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Store_1 = __importDefault(require(\"../Store\"));\r\n/**\r\n * Base class for ModelSource implementations.\r\n * Also can serve as a simple in memory model source.\r\n */\r\nclass CompositeStore extends Store_1.default {\r\n    constructor(stores) {\r\n        super();\r\n        this.stores = stores;\r\n    }\r\n    getStore(key) {\r\n        let store = this.stores[key.schema.store || \"memory\"];\r\n        if (store == null)\r\n            throw new Error(`Store not found: ${name}`);\r\n        return store;\r\n    }\r\n    addReadListener(listener) {\r\n        for (let name in this.stores)\r\n            this.stores[name].addReadListener(listener);\r\n    }\r\n    removeReadListener(listener) {\r\n        for (let name in this.stores)\r\n            this.stores[name].removeReadListener(listener);\r\n    }\r\n    addWriteListener(listener) {\r\n        for (let name in this.stores)\r\n            this.stores[name].addWriteListener(listener);\r\n    }\r\n    removeWriteListener(listener) {\r\n        for (let name in this.stores)\r\n            this.stores[name].removeWriteListener(listener);\r\n    }\r\n    get(key, peek = false) {\r\n        return this.getStore(key).get(key, peek);\r\n    }\r\n    ensureWatched(key) {\r\n        return this.getStore(key).ensureWatched(key);\r\n    }\r\n    removeWatched(key) {\r\n        return this.getStore(key).removeWatched(key);\r\n    }\r\n    patch(key, value) {\r\n        this.getStore(key).patch(key, value);\r\n    }\r\n}\r\nexports.default = CompositeStore;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CompositeStore_1 = __importDefault(require(\"./CompositeStore\"));\r\nconst LocalStore_1 = __importDefault(require(\"./LocalStore\"));\r\nconst MemoryStore_1 = __importDefault(require(\"./MemoryStore\"));\r\nconst SessionStore_1 = __importDefault(require(\"./SessionStore\"));\r\nconst HashStore_1 = __importDefault(require(\"./HashStore\"));\r\nconst ServerStore_1 = __importDefault(require(\"./ServerStore\"));\r\nconst DependentStore_1 = __importDefault(require(\"./DependentStore\"));\r\nexports.stores = {\r\n    local: global.localStorage ? new LocalStore_1.default() : new MemoryStore_1.default(),\r\n    session: global.sessionStorage ? new SessionStore_1.default() : new MemoryStore_1.default(),\r\n    hash: global.location ? new HashStore_1.default() : new MemoryStore_1.default(),\r\n    memory: new MemoryStore_1.default(),\r\n    dependent: new DependentStore_1.default(),\r\n    server: global.fetch ? new ServerStore_1.default() : new MemoryStore_1.default(),\r\n};\r\nfunction create(config) {\r\n    const newStores = Object.assign({}, exports.stores, config);\r\n    return Object.assign(new CompositeStore_1.default(newStores), newStores);\r\n}\r\nexports.create = create;\r\n// export default interface DefaultStore extends Store {\r\n//     stores: { [name: string]: Store }\r\n//     local: Store\r\n//     session: Store\r\n//     memory: Store\r\n//     hash: Store\r\n//     server: Store\r\n//     dependent: Store\r\n// }\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst MemoryStore_1 = __importDefault(require(\"./MemoryStore\"));\r\nclass DependentStore extends MemoryStore_1.default {\r\n    ensureWatched(key) {\r\n        let newlyWatched = super.ensureWatched(key);\r\n        if (newlyWatched) {\r\n            let type = key.type;\r\n            type.watched(key);\r\n        }\r\n        return newlyWatched;\r\n    }\r\n}\r\nexports.default = DependentStore;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"../Model\"));\r\nconst LocalStore_1 = __importDefault(require(\"./LocalStore\"));\r\nclass HashStorage {\r\n    constructor() {\r\n        this.keys = null;\r\n        this.hash = this.getHash();\r\n    }\r\n    getKeys() {\r\n        if (!this.keys)\r\n            this.keys = Object.keys(this.hash);\r\n        return this.keys;\r\n    }\r\n    getHash() {\r\n        try {\r\n            let hash = location.hash.slice(1).trim();\r\n            if (hash.length > 0)\r\n                return JSON.parse(decodeURIComponent(hash));\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n        return {};\r\n    }\r\n    updateHash() {\r\n        location.hash = JSON.stringify(this.hash);\r\n        this.keys = null; // invalidate keys\r\n    }\r\n    get length() {\r\n        return this.getKeys().length;\r\n    }\r\n    key(index) {\r\n        return this.getKeys()[index];\r\n    }\r\n    getItem(key) { return this.hash[key]; }\r\n    setItem(key, value) {\r\n        this.hash[key] = value;\r\n        this.updateHash();\r\n    }\r\n    removeItem(key) {\r\n        delete this.hash[key];\r\n        this.updateHash();\r\n    }\r\n    clear() {\r\n        this.hash = {};\r\n        this.updateHash();\r\n    }\r\n}\r\nclass HashStore extends LocalStore_1.default {\r\n    constructor(serializer = Model_1.default.serializer) {\r\n        super(new HashStorage(), serializer);\r\n    }\r\n}\r\nexports.default = HashStore;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Key_1 = __importDefault(require(\"../Key\"));\r\nconst MemoryStore_1 = __importDefault(require(\"./MemoryStore\"));\r\nconst Serializer_1 = __importDefault(require(\"../Serializer\"));\r\n//  local stores extend memory stores and then operate as a write-through cache\r\n//  we DO NOT watch the localStorage object in realtime.\r\nclass LocalStore extends MemoryStore_1.default {\r\n    constructor(storage = localStorage, serializer = Serializer_1.default.default) {\r\n        super();\r\n        this.loaded = new Set();\r\n        this.serializer = serializer;\r\n        this.storage = storage;\r\n    }\r\n    ensureLoaded(key) {\r\n        let checkLoadedKey = Key_1.default.isSearchKey(key) ? key.schema : key.string;\r\n        if (!this.loaded.has(checkLoadedKey)) {\r\n            this.loaded.add(checkLoadedKey);\r\n            if (Key_1.default.isModelKey(key)) {\r\n                let value = this.storage.getItem(key.string);\r\n                if (value != null) {\r\n                    let model = this.serializer.parse(value);\r\n                    this.setValue(key, model);\r\n                }\r\n            }\r\n            else {\r\n                let filter = key.schema.name + \"/\";\r\n                // iterate all keys and try to load values\r\n                for (let i = 0; i < this.storage.length; i++) {\r\n                    let keyString = this.storage.key(i);\r\n                    if (keyString !== null && keyString.startsWith(filter) && Key_1.default.isProbablyModelKey(keyString)) {\r\n                        try {\r\n                            let modelKey = Key_1.default.parse(this.serializer.namespace, keyString);\r\n                            this.ensureLoaded(modelKey);\r\n                        }\r\n                        catch (e) {\r\n                            // console.warn(e)\r\n                            console.warn(`Deleting invalid key (${keyString})`);\r\n                            // storage.removeItem(keyString)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get(key, peek = false) {\r\n        this.ensureLoaded(key);\r\n        return super.get(key, peek);\r\n    }\r\n    setValue(key, value) {\r\n        let changed = super.setValue(key, value);\r\n        // we only store model keys in local storage, never query keys\r\n        if (changed && Key_1.default.isModelKey(key)) {\r\n            if (value != null) {\r\n                if (key.type != null && value.constructor !== key.type)\r\n                    value = new key.type(value);\r\n                this.storage.setItem(key.string, this.serializer.stringify(value));\r\n            }\r\n            else {\r\n                this.storage.removeItem(key.string);\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n}\r\nexports.default = LocalStore;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Key_1 = __importDefault(require(\"../Key\"));\r\nconst clonePatch_1 = __importDefault(require(\"../../utility/clonePatch\"));\r\nconst Store_1 = __importDefault(require(\"../Store\"));\r\nconst Table_1 = __importDefault(require(\"./Table\"));\r\nconst validate_1 = __importDefault(require(\"../schema/validate\"));\r\n/**\r\n * Base class for ModelSource implementations.\r\n * Also can serve as a simple in memory model source.\r\n */\r\nclass MemoryStore extends Store_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.tables = new Map();\r\n        this.keys = new Map();\r\n        this.values = new Map();\r\n        this.writeListeners = new Set();\r\n        this.readListeners = new Set();\r\n        this.watched = new Set();\r\n    }\r\n    getTable(key) {\r\n        let table = this.tables.get(key.string);\r\n        if (table == null) {\r\n            table = new Table_1.default(key);\r\n            for (let modelKey of this.keys.values()) {\r\n                if (Key_1.default.isModelKey(modelKey)) {\r\n                    if (key.isPossibleMatch(modelKey)) {\r\n                        let model = this.peek(modelKey);\r\n                        if (model == null)\r\n                            throw new Error(`Model is missing for key: ${modelKey}`);\r\n                        table.update(modelKey, model);\r\n                    }\r\n                }\r\n            }\r\n            this.tables.set(key.string, table);\r\n        }\r\n        return table;\r\n    }\r\n    addReadListener(listener) {\r\n        this.readListeners.add(listener);\r\n    }\r\n    removeReadListener(listener) {\r\n        this.readListeners.delete(listener);\r\n    }\r\n    addWriteListener(listener) {\r\n        this.writeListeners.add(listener);\r\n    }\r\n    removeWriteListener(listener) {\r\n        this.writeListeners.delete(listener);\r\n    }\r\n    get(key, peek = false) {\r\n        // if it's a query make sure we have the corresponding table tracking changes\r\n        if (!peek) {\r\n            this.notify(key, this.readListeners);\r\n            this.ensureWatched(key);\r\n        }\r\n        let value = this.values.get(key.string);\r\n        // if a ModelClass provides a default value we return that when no value is present.\r\n        if (value == null) {\r\n            // if it's a query key not explicitly cached then we create it.\r\n            if (Key_1.default.isSearchKey(key)) {\r\n                return this.getTable(key).getKeys(this);\r\n            }\r\n            value = key.schema.default || value;\r\n        }\r\n        return value;\r\n    }\r\n    ensureWatched(key) {\r\n        if (this.watched.has(key.string))\r\n            return false;\r\n        this.watched.add(key.string);\r\n        return true;\r\n    }\r\n    removeWatched(key) {\r\n        return this.watched.delete(key.string);\r\n    }\r\n    patch(key, value) {\r\n        if (!Key_1.default.isModelKey(key))\r\n            throw new Error(\"Invalid EntityKey: \" + key);\r\n        let newValue = clonePatch_1.default(this.get(key, true), value);\r\n        if (key.type == null && value != null) {\r\n            // if the key has a type then that validates on construction\r\n            // otherwise we need to validate the value here.\r\n            let errors = validate_1.default(key.schema, value);\r\n            if (errors.length > 0) {\r\n                throw new Error(`validation of ${key.string} failed:\\n${errors.join(\"\\n\")}`);\r\n            }\r\n        }\r\n        this.setValue(key, newValue);\r\n    }\r\n    setValue(key, value) {\r\n        let currentValue = this.values.get(key.string);\r\n        if (value === currentValue) {\r\n            return false;\r\n        }\r\n        if (Key_1.default.isModelKey(key)) {\r\n            if (value != null && key.type != null && value.constructor !== key.type) {\r\n                value = new key.type(value);\r\n            }\r\n            if (!this.keys.has(key.string)) {\r\n                this.keys.set(key.string, key);\r\n            }\r\n            for (let table of this.tables.values()) {\r\n                if (table.update(key, value)) {\r\n                    this.notify(table.key, this.writeListeners);\r\n                }\r\n            }\r\n        }\r\n        this.values.set(key.string, value);\r\n        this.notify(key, this.writeListeners);\r\n        return true;\r\n    }\r\n    notify(key, listeners) {\r\n        for (let listener of listeners)\r\n            listener(key);\r\n    }\r\n}\r\nexports.default = MemoryStore;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Key_1 = __importDefault(require(\"../Key\"));\r\nconst MemoryStore_1 = __importDefault(require(\"./MemoryStore\"));\r\nconst Model_1 = __importDefault(require(\"../Model\"));\r\nconst invoke_1 = __importDefault(require(\"../../server/invoke\"));\r\n//  Query results\r\n//      limit ? -> cache results\r\n//      else -> just store values\r\nclass ServerStore extends MemoryStore_1.default {\r\n    constructor(path = \"/api/data\", serializer = Model_1.default.serializer) {\r\n        super();\r\n        this.path = path;\r\n        this.serializer = serializer;\r\n    }\r\n    ensureWatched(key) {\r\n        if (!super.ensureWatched(key)) {\r\n            return false;\r\n        }\r\n        let handleEntities = (entities) => {\r\n            // now... do we store individual query results, or entire result sets?\r\n            // for now let's just store the whole value till we can analyze\r\n            for (let entity of entities) {\r\n                this.watched.add(entity.key.string);\r\n                super.setValue(entity.key, entity);\r\n            }\r\n            if (Key_1.default.isSearchKey(key) && key.query != null && key.query.limit != null) {\r\n                let keys = entities.map(entity => entity.key);\r\n                super.setValue(key, keys);\r\n            }\r\n            if (Key_1.default.isModelKey(key) && entities.length == 0) {\r\n                super.setValue(key, null);\r\n            }\r\n        };\r\n        console.log(`ensureLoaded ${key}`);\r\n        if (Key_1.default.isSearchKey(key)) {\r\n            const rowDelimiter = \"\\n\";\r\n            let url = `${this.path}/query/${key}`;\r\n            let xhr = new XMLHttpRequest();\r\n            let read = 0;\r\n            let entities = [];\r\n            let tryRead = () => {\r\n                let text = xhr.responseText;\r\n                let rowEnd = text.lastIndexOf(rowDelimiter);\r\n                // console.log('tryRead', {rowEnd})\r\n                if (rowEnd > 0) {\r\n                    // console.log(\"next\", { read, rowEnd })\r\n                    let unread = text.slice(read, rowEnd);\r\n                    if (unread.length > 0) {\r\n                        read = rowEnd;\r\n                        let serializedRows = unread.trim().split(rowDelimiter);\r\n                        entities.push(...serializedRows.map(raw => Model_1.default.serializer.parse(raw)));\r\n                        // console.log(\"Deserialize: \" + serializedRows.length)\r\n                    }\r\n                }\r\n            };\r\n            xhr.onprogress = tryRead;\r\n            xhr.onload = () => {\r\n                tryRead();\r\n                handleEntities(entities);\r\n            };\r\n            xhr.open(\"GET\", url);\r\n            xhr.responseType = \"text\";\r\n            xhr.send();\r\n        }\r\n        else {\r\n            invoke_1.default(`${this.path}/get`, [key.toString()]).then(result => {\r\n                let entities = result[0];\r\n                handleEntities(entities);\r\n            }, reason => {\r\n                console.log(\"Invoke get error\", reason);\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n    setValue(key, value) {\r\n        let changed = super.setValue(key, value);\r\n        // we only store model keys in local storage, never query keys\r\n        if (changed && Key_1.default.isModelKey(key)) {\r\n            // mark this entity as watched\r\n            this.watched.add(key.toString());\r\n            if (value != null) {\r\n                if (key.type != null && value.constructor !== key.type) {\r\n                    value = new key.type(value);\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"No deleting yet\");\r\n            }\r\n            invoke_1.default(`${this.path}/patch`, { [key.toString()]: value }).then(result => {\r\n                console.log(\"patch?\", result);\r\n            }, reason => {\r\n                console.log(\"Invoke patch error\", reason);\r\n            });\r\n        }\r\n        return changed;\r\n    }\r\n}\r\nexports.default = ServerStore;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst LocalStore_1 = __importDefault(require(\"./LocalStore\"));\r\nclass SessionStore extends LocalStore_1.default {\r\n    constructor(serializer) {\r\n        super(sessionStorage, serializer);\r\n    }\r\n}\r\nexports.default = SessionStore;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Query_1 = require(\"../Query\");\r\nclass Table {\r\n    constructor(key) {\r\n        this.keys = new Map();\r\n        this.cachedKeys = null;\r\n        this.key = key;\r\n        this.filter = Query_1.createPredicate(key.query);\r\n    }\r\n    invalidateCachedKeys() {\r\n        this.cachedKeys = null;\r\n    }\r\n    getKeyIterator() {\r\n        return this.keys.values();\r\n    }\r\n    createSortedKeys(store) {\r\n        if (this.key.query.sort == null || this.key.query.sort.length === 0)\r\n            return Array.from(this.getKeyIterator());\r\n        //  get value for each key\r\n        let values = [];\r\n        let valueToKeyMap = new Map();\r\n        for (let key of this.getKeyIterator()) {\r\n            let value = store.peek(key);\r\n            if (value) {\r\n                values.push(value);\r\n                valueToKeyMap.set(value, key);\r\n            }\r\n        }\r\n        //  sort values\r\n        values.sort(Query_1.createSortCompareFunction(this.key.query));\r\n        //  convert back to keys and return\r\n        return values.map(t => valueToKeyMap.get(t));\r\n    }\r\n    getKeys(store) {\r\n        if (this.cachedKeys == null)\r\n            this.cachedKeys = this.createSortedKeys(store);\r\n        return this.cachedKeys;\r\n    }\r\n    update(key, record) {\r\n        if (record != null) {\r\n            if (this.key.isPossibleMatch(key) && this.filter(record)) {\r\n                if (!this.keys.has(key.string)) {\r\n                    this.invalidateCachedKeys();\r\n                    this.keys.set(key.string, key);\r\n                    return true;\r\n                }\r\n            }\r\n            else {\r\n                record = null;\r\n            }\r\n        }\r\n        if (record == null && this.keys.has(key.string)) {\r\n            this.invalidateCachedKeys();\r\n            this.keys.delete(key.string);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.default = Table;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar FocusState_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"../data/Model\"));\r\nconst Key_1 = __importDefault(require(\"../data/Key\"));\r\nconst State_1 = __importDefault(require(\"../data/State\"));\r\nlet FocusState = FocusState_1 = class FocusState extends State_1.default {\r\n};\r\nFocusState.key = Key_1.default.create(FocusState_1, \"0\");\r\n__decorate([\r\n    Model_1.default.property({ type: \"string\", default: \"\" })\r\n], FocusState.prototype, \"id\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"integer\", default: 0 })\r\n], FocusState.prototype, \"start\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"integer\", default: 0 })\r\n], FocusState.prototype, \"end\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ enum: [\"forward\", \"backward\", \"none\"], default: \"none\" })\r\n], FocusState.prototype, \"direction\", void 0);\r\nFocusState = FocusState_1 = __decorate([\r\n    Model_1.default.class()\r\n], FocusState);\r\nexports.default = FocusState;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar Identity_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst schema = __importStar(require(\"../data/schema\"));\r\nconst Key_1 = __importDefault(require(\"../data/Key\"));\r\nconst Store_1 = __importDefault(require(\"../data/Store\"));\r\nconst Model_1 = __importDefault(require(\"../data/Model\"));\r\nconst common_1 = require(\"../utility/common\");\r\nconst User_1 = __importDefault(require(\"./User\"));\r\nconst sessionKey = Key_1.default.create({ name: \"AccessToken_session\", store: \"session\", type: \"string\" }, \"singleton\");\r\nconst localKey = Key_1.default.create({ name: \"AccessToken_local\", store: \"local\", type: \"string\" }, \"singleton\");\r\nconst tokenToIdentity = common_1.memoize((token) => {\r\n    const [header, message, signature] = token.split(\".\");\r\n    return new Identity(JSON.parse(atob(message)), { token });\r\n});\r\n/**\r\n * This model represents the parsed body of our access tokens.\r\n * Use the static get/set functions to store or retrieve.\r\n */\r\nlet Identity = Identity_1 = class Identity extends Model_1.default {\r\n    getUserKey(userClass = User_1.default) {\r\n        return Key_1.default.create(userClass, this.email);\r\n    }\r\n    get initials() {\r\n        return this.name.split(\" \").map(name => name[0]).join(\"\").toUpperCase();\r\n    }\r\n    static get() {\r\n        const sessionToken = Store_1.default.default.get(sessionKey);\r\n        const localToken = Store_1.default.default.get(localKey);\r\n        const token = sessionToken || localToken;\r\n        return token != null ? tokenToIdentity(token) : null;\r\n    }\r\n    static set(token, remember = false) {\r\n        Store_1.default.default.patch(sessionKey, remember ? token : null);\r\n        Store_1.default.default.patch(localKey, remember ? null : token);\r\n    }\r\n    static revoke() {\r\n        Identity_1.set(null);\r\n    }\r\n};\r\n__decorate([\r\n    Model_1.default.property(schema.number)\r\n], Identity.prototype, \"exp\", void 0);\r\n__decorate([\r\n    Model_1.default.property(schema.datetime)\r\n], Identity.prototype, \"issued\", void 0);\r\n__decorate([\r\n    Model_1.default.property(schema.name)\r\n], Identity.prototype, \"name\", void 0);\r\n__decorate([\r\n    Model_1.default.property(schema.email)\r\n], Identity.prototype, \"email\", void 0);\r\n__decorate([\r\n    Model_1.default.property(schema.string)\r\n], Identity.prototype, \"token\", void 0);\r\nIdentity = Identity_1 = __decorate([\r\n    Model_1.default.class()\r\n], Identity);\r\nexports.default = Identity;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst schema = __importStar(require(\"../data/schema\"));\r\nconst Entity_1 = __importDefault(require(\"../data/Entity\"));\r\nconst Key_1 = __importDefault(require(\"../data/Key\"));\r\nlet User = class User extends Entity_1.default {\r\n    get email() { return this.key.id; }\r\n};\r\n__decorate([\r\n    Entity_1.default.property(schema.name, { title: \"Name\", minLength: 1, maxLength: 100, required: true })\r\n], User.prototype, \"name\", void 0);\r\n__decorate([\r\n    Entity_1.default.property(schema.email, { title: \"Email\", required: true })\r\n], User.prototype, \"email\", null);\r\n__decorate([\r\n    Entity_1.default.property(schema.phone, { title: \"Mobile\", required: true })\r\n], User.prototype, \"mobile\", void 0);\r\n__decorate([\r\n    Entity_1.default.property(schema.string, { maxLength: 500 })\r\n], User.prototype, \"passwordHash\", void 0);\r\nUser = __decorate([\r\n    Entity_1.default.class()\r\n], User);\r\nexports.default = User;\r\nconst sessionKey = Key_1.default.create({ name: \"User.sessionKey\", store: \"session\", type: \"string\" }, \"singleton\");\r\nconst localKey = Key_1.default.create({ name: \"User.localKey\", store: \"local\", type: \"string\" }, \"singleton\");\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"../data/Model\"));\r\nconst Identity_1 = __importDefault(require(\"../model/Identity\"));\r\n//  invokes a server side remote api function\r\nasync function invoke(path, input) {\r\n    let identity = Identity_1.default.get();\r\n    let headers = {\r\n        \"Content-Type\": \"application/json; charset=utf-8\"\r\n    };\r\n    if (identity) {\r\n        headers.token = identity.token;\r\n    }\r\n    let result = await fetch(path, {\r\n        method: \"POST\",\r\n        headers,\r\n        body: Model_1.default.serializer.stringify(input)\r\n    });\r\n    return Model_1.default.serializer.parse(await result.text());\r\n}\r\nexports.default = invoke;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import DefaultStore from \"../data/stores/DefaultStore\"\r\nconst Store_1 = __importDefault(require(\"../data/Store\"));\r\nconst localize_1 = __importDefault(require(\"./localize\"));\r\nconst bindComponentToDom_1 = __importDefault(require(\"./html/bindComponentToDom\"));\r\nconst SoundContext_1 = __importDefault(require(\"./sound/SoundContext\"));\r\nconst functions_1 = require(\"./html/functions\");\r\nfunction quickPropertyEquals(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (a == null || b == null || typeof a !== \"object\" || a.constructor !== b.constructor)\r\n        return false;\r\n    if (Array.isArray(a)) {\r\n        if (a.length !== b.length)\r\n            return false;\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i])\r\n                return false;\r\n        }\r\n    }\r\n    else {\r\n        for (let name in a) {\r\n            if (a[name] !== b[name])\r\n                return false;\r\n        }\r\n        for (let name in b) {\r\n            if (a[name] !== b[name])\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nclass Context {\r\n    constructor(root = document.body) {\r\n        this.renderStack = [];\r\n        this.store = Store_1.default.default;\r\n        this.sound = new SoundContext_1.default();\r\n        this.localize = localize_1.default;\r\n        this.recycled = 0;\r\n        this.created = 0;\r\n        this.removed = 0;\r\n        this.skipped = 0;\r\n        this.createdComponents = 0;\r\n        this.removedComponents = 0;\r\n        this.postRenderCallbacks = new Set();\r\n        this.isRendering = false;\r\n        this.elements = [root, null];\r\n        if (root.ownerDocument == null) {\r\n            throw new Error(\"Node is not in a document\");\r\n        }\r\n        this.document = root.ownerDocument;\r\n        // bind some of the members likely to be used without this.\r\n        this.begin = this.begin.bind(this);\r\n        this.text = this.text.bind(this);\r\n        this.end = this.end.bind(this);\r\n        this.empty = this.empty.bind(this);\r\n        this.render = this.render.bind(this);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    //  BEGIN STATS\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    resetStats() {\r\n        this.recycled = 0;\r\n        this.created = 0;\r\n        this.removed = 0;\r\n        this.skipped = 0;\r\n        this.createdComponents = 0;\r\n        this.removedComponents = 0;\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    //  END STATS\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    begin(factory, properties) {\r\n        if (!this.isRendering)\r\n            throw new Error(\"Invalid attempt to render without beginRender / endRender\");\r\n        // let factory = isNodeClass(classOrFactory) ? classOrFactory.getFactory() : classOrFactory\r\n        // we recycle nodes if they come from the same factory\r\n        const maybeRecycle = this.insertBefore;\r\n        let node = maybeRecycle != null && maybeRecycle.factory === factory ? maybeRecycle : null;\r\n        if (node == null) {\r\n            //  create a new node\r\n            this.created++;\r\n            node = factory.create(this);\r\n            node.factory = factory;\r\n            this.insert(node);\r\n        }\r\n        else {\r\n            //  recycle a previous node\r\n            this.recycled++;\r\n            this.disposeOfAnyComponents(node);\r\n        }\r\n        factory.setProperties(node, properties);\r\n        this.push(node);\r\n        return node;\r\n    }\r\n    end(factory) {\r\n        if (factory != null) {\r\n            if (this.parentNode.factory !== factory) {\r\n                throw new Error(\"Begin and end node factories do not match\");\r\n            }\r\n        }\r\n        //  remove any remaining children following the insert after\r\n        let remove;\r\n        while (remove = this.insertBefore) {\r\n            this.disposeOfAnyComponents(remove, true);\r\n            this.removed++;\r\n            this.parentNode.removeChild(remove);\r\n        }\r\n        this.pop();\r\n    }\r\n    /**\r\n     * Begins and ends a new node optionally containing content.\r\n     * @param factory\r\n     * @param propertiesOrContent\r\n     * @param content\r\n     */\r\n    empty(factory, propertiesOrContent, content) {\r\n        let node;\r\n        if (typeof propertiesOrContent === \"string\") {\r\n            node = this.begin(factory);\r\n            this.text(propertiesOrContent);\r\n        }\r\n        else {\r\n            node = this.begin(factory, propertiesOrContent);\r\n            if (content != null) {\r\n                this.text(content);\r\n            }\r\n        }\r\n        this.end(factory);\r\n        return node;\r\n    }\r\n    text(content) {\r\n        let textFactory = this.parentNode.factory.text;\r\n        if (textFactory == null) {\r\n            throw new Error(\"Cannot add text content to current node.\");\r\n        }\r\n        let node = this.begin(textFactory, content);\r\n        this.end(textFactory);\r\n        return node;\r\n    }\r\n    get component() {\r\n        return this.renderStack[this.renderStack.length - 1];\r\n    }\r\n    disposeOfAnyComponents(node, deep = false) {\r\n        for (let component = node.component; component != null; component = component.next) {\r\n            if (component) {\r\n                this.removedComponents++;\r\n            }\r\n            // recursively search for and dispose of any descendant components\r\n            if (deep) {\r\n                for (let child = node.firstChild; child != null; child = child.nextSibling) {\r\n                    this.disposeOfAnyComponents(child, deep);\r\n                }\r\n            }\r\n            if (component.dispose) {\r\n                component.dispose();\r\n            }\r\n            if (this.onDispose) {\r\n                this.onDispose(component);\r\n            }\r\n            component.node = null;\r\n            delete node.component;\r\n        }\r\n    }\r\n    //  need a way to request a notification after normal rendering\r\n    requestAnimationFrame(callback) {\r\n        if (this.isRendering) {\r\n            this.postRenderCallbacks.add(callback);\r\n        }\r\n        else {\r\n            window.requestAnimationFrame(callback);\r\n        }\r\n    }\r\n    static get current() {\r\n        return Context.currentStack[Context.currentStack.length - 1];\r\n    }\r\n    beginRender(parentNode, insertAfterNode = null) {\r\n        Context.currentStack.push(this);\r\n        this.isRendering = true;\r\n        this.elements[0] = parentNode;\r\n        this.elements[1] = insertAfterNode;\r\n        this.elements.length = 2;\r\n    }\r\n    endRender() {\r\n        this.isRendering = false;\r\n        Context.currentStack.pop();\r\n    }\r\n    rerender(components, time) {\r\n        for (let component of components) {\r\n            let node = component.node;\r\n            // if the node or parentNode is null then this component has already been disposed\r\n            if (node != null) {\r\n                let rootComponent = node.component;\r\n                if (rootComponent != null) {\r\n                    // reset the stack so we can re-render over the previous node\r\n                    this.beginRender(node.parentNode, node.previousSibling);\r\n                    this.render(rootComponent.render, rootComponent.properties, true);\r\n                    this.endRender();\r\n                }\r\n            }\r\n        }\r\n        if (this.postRenderCallbacks.size > 0) {\r\n            for (let callback of this.postRenderCallbacks) {\r\n                callback(time);\r\n            }\r\n            this.postRenderCallbacks.clear();\r\n        }\r\n    }\r\n    render(type, properties, forceRenderBecauseStateChanged = false) {\r\n        if (!this.isRendering)\r\n            throw new Error(\"Invalid attempt to render without beginRender / endRender\");\r\n        let parentNode = this.parentNode;\r\n        let insertAfter = this.insertAfter;\r\n        let insertBefore = this.insertBefore;\r\n        let previousComponent = insertBefore && insertBefore.component;\r\n        if (!forceRenderBecauseStateChanged && previousComponent && previousComponent.render === type && quickPropertyEquals(previousComponent.properties, properties)) {\r\n            //  early exit... just skip node\r\n            this.skipped++;\r\n            this.insertAfter = insertBefore;\r\n        }\r\n        else {\r\n            this.createdComponents++;\r\n            //  create new Component\r\n            let component = { render: type, properties, node: null };\r\n            this.renderStack.push(component);\r\n            let maybeDispose = component.render(this, properties);\r\n            if (maybeDispose) {\r\n                if (typeof maybeDispose === \"object\") {\r\n                    maybeDispose = functions_1.bindEventListeners(maybeDispose);\r\n                }\r\n                if (typeof maybeDispose !== \"function\") {\r\n                    throw new Error(\"Component render functions can only return a dispose function or nothing\");\r\n                }\r\n                component.dispose = maybeDispose;\r\n            }\r\n            this.renderStack.pop();\r\n            let firstNode = (insertAfter ? insertAfter.nextSibling : parentNode.firstChild);\r\n            if (firstNode == null || insertAfter === this.insertAfter)\r\n                throw new Error(`Component must render one node: ${type.toString()}`);\r\n            if (firstNode.component != null) {\r\n                //  nested components\r\n                //  child components are first but we want most ancestral component on top\r\n                //  so we replace component on node\r\n                component.next = firstNode.component;\r\n            }\r\n            firstNode.component = component;\r\n            component.node = firstNode;\r\n            let lastNode = this.insertAfter;\r\n            if (lastNode !== firstNode)\r\n                throw new Error(\"Component cannot render more than one node\");\r\n        }\r\n        return this.insertAfter;\r\n    }\r\n    push(element) {\r\n        this.insertAfter = element;\r\n        this.elements.push(element, null);\r\n    }\r\n    pop() { this.elements.length -= 2; }\r\n    get parentNode() { return this.elements[this.elements.length - 2]; }\r\n    insert(node) {\r\n        this.parentNode.insertBefore(node, this.insertBefore);\r\n        return node;\r\n    }\r\n    get insertAfter() { return this.elements[this.elements.length - 1]; }\r\n    set insertAfter(element) { this.elements[this.elements.length - 1] = element; }\r\n    get insertBefore() {\r\n        let insertAfter = this.insertAfter;\r\n        let insertBefore = insertAfter != null ? insertAfter.nextSibling : this.parentNode.firstChild;\r\n        return insertBefore;\r\n    }\r\n    get lastNode() { return this.insertAfter; }\r\n    static bind(render, arg, container = document.body) {\r\n        if (container == null) {\r\n            throw new Error(\"document.body must be defined before calling this function\");\r\n        }\r\n        bindComponentToDom_1.default(container, render, arg);\r\n    }\r\n    static component(render) {\r\n        return (properties) => {\r\n            return Context.current.render(render, properties);\r\n        };\r\n    }\r\n}\r\nexports.default = Context;\r\nContext.currentStack = [];\r\n/**\r\n * Alternative way to convert a render function to a component function.\r\n * Javascript doesn't yet have a standard proposal for function declarators though.\r\n * So this is not useful yet.\r\n */\r\nexports.component = Context.component;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Context_1 = __importDefault(require(\"../Context\"));\r\nconst HtmlTextNodeFactory_1 = __importDefault(require(\"./HtmlTextNodeFactory\"));\r\nconst ignoreProperties = { content: true };\r\nfunction HtmlElementFactory(tagName, namespaceOrAttributes) {\r\n    let attributes = null;\r\n    let namespace = null;\r\n    if (typeof namespaceOrAttributes === \"string\") {\r\n        namespace = namespaceOrAttributes;\r\n    }\r\n    else {\r\n        attributes = namespaceOrAttributes;\r\n    }\r\n    function isAttribute(name, value, previousValue) {\r\n        if (typeof value === \"function\" || typeof previousValue === \"function\") {\r\n            return false;\r\n        }\r\n        return attributes == null || attributes[name] === true;\r\n    }\r\n    let factory = {\r\n        text: HtmlTextNodeFactory_1.default.instance,\r\n        create(c) {\r\n            if (namespace) {\r\n                return c.document.createElementNS(namespace, tagName);\r\n            }\r\n            else {\r\n                return c.document.createElement(tagName);\r\n            }\r\n        },\r\n        setProperties(node, properties = null) {\r\n            const previousProperties = node.properties;\r\n            if (properties != null) {\r\n                for (let name in properties) {\r\n                    if (!ignoreProperties[name]) {\r\n                        let value = properties[name];\r\n                        let previousValue = previousProperties != null ? previousProperties[name] : undefined;\r\n                        if (previousValue != value /* != on purpose */) {\r\n                            if (isAttribute(name, value, previousValue)) {\r\n                                if (value != null) {\r\n                                    node.setAttribute(name, value);\r\n                                }\r\n                                else {\r\n                                    node.removeAttribute(name);\r\n                                }\r\n                            }\r\n                            else {\r\n                                node[name] = value;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (previousProperties != null) {\r\n                for (let name in previousProperties) {\r\n                    if (!ignoreProperties[name]) {\r\n                        let previousValue = previousProperties[name];\r\n                        if (properties == null || !properties.hasOwnProperty(name)) {\r\n                            let value = properties != null ? properties[name] : undefined;\r\n                            if (isAttribute(name, value, previousValue)) {\r\n                                node.removeAttribute(name);\r\n                            }\r\n                            else {\r\n                                node[name] = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            node.properties = properties;\r\n        },\r\n        dispose(node) {\r\n        },\r\n        toString() {\r\n            return `HtmlNodeFactory(${tagName})`;\r\n        }\r\n    };\r\n    function renderElement(properties) {\r\n        let c = Context_1.default.current;\r\n        let content = null;\r\n        if (typeof properties !== \"object\") {\r\n            content = properties;\r\n            properties = null;\r\n        }\r\n        else if (properties) {\r\n            content = properties[\"content\"];\r\n        }\r\n        let element = c.begin(factory, properties);\r\n        if (typeof content === \"function\") {\r\n            content(c);\r\n        }\r\n        else if (typeof content === \"string\") {\r\n            c.text(content);\r\n        }\r\n        else if (content != null) {\r\n            throw new Error(`Unsupported content type: ${content}`);\r\n        }\r\n        c.end(factory);\r\n        // return element as unknown as HTMLElement\r\n        return element;\r\n    }\r\n    return Object.assign(renderElement, factory);\r\n}\r\nexports.default = HtmlElementFactory;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass HtmlTextNodeFactory {\r\n    constructor() {\r\n    }\r\n    create(c) {\r\n        return c.document.createTextNode(\"\");\r\n    }\r\n    setProperties(node, properties) {\r\n        properties = properties != null ? properties.toString() : \"\";\r\n        const previousProperties = node.properties;\r\n        if (properties !== previousProperties) {\r\n            node.textContent = properties;\r\n        }\r\n        node.properties = properties;\r\n    }\r\n    dispose(node) {\r\n    }\r\n    toString() {\r\n        return `HtmlTextNodeFactory`;\r\n    }\r\n}\r\nexports.default = HtmlTextNodeFactory;\r\nHtmlTextNodeFactory.instance = new HtmlTextNodeFactory();\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Store_1 = __importDefault(require(\"../../data/Store\"));\r\nconst Context_1 = __importDefault(require(\"../Context\"));\r\nconst DependencyTracker_1 = __importDefault(require(\"../../utility/DependencyTracker\"));\r\nfunction bindComponentToDom(container, componentType, componentProperties, store) {\r\n    var _a, _b;\r\n    if (store == null) {\r\n        store = Store_1.default.default;\r\n        if (store == null) {\r\n            //  there is a circular dependency somewhere.\r\n            //  between Store -> Key -> Model -> Store\r\n            //  have not been able to remove it without losing State typing.\r\n            //  so we're still importing this one with require.\r\n            Store_1.default.default = store = require(\"../../data/stores/DefaultStore\").create();\r\n        }\r\n    }\r\n    let pendingRenders = new Set();\r\n    function render(time) {\r\n        let start = performance.now();\r\n        let count = pendingRenders.size;\r\n        // reset stats\r\n        context.resetStats();\r\n        context.rerender(pendingRenders, time);\r\n        pendingRenders.clear();\r\n        let finish = performance.now();\r\n        let delta = finish - start;\r\n        //  using debug so that by default it's not visible\r\n        //  if you want to see it you have to enable \"verbose\" in the browser console settings\r\n        console.debug(`${delta.toFixed(2)} ms: Update ${count}, Skipped: ${context.skipped}, Reused: ${context.recycled}, Removed: ${context.removed}, Added: ${context.created}`);\r\n    }\r\n    function queueRender(components) {\r\n        if (components.size === 0) {\r\n            return;\r\n        }\r\n        let alreadyQueued = pendingRenders.size > 0;\r\n        for (let component of components) {\r\n            pendingRenders.add(component);\r\n        }\r\n        if (!alreadyQueued) {\r\n            requestAnimationFrame(render);\r\n        }\r\n    }\r\n    //  create dependency tracker to track which components are dependent upon which keys\r\n    let dependencies = new DependencyTracker_1.default();\r\n    //  listen to writes on the low level store\r\n    function writeListener(key) {\r\n        queueRender(dependencies.getDependents(key.string));\r\n    }\r\n    function readListener(key) {\r\n        if (context.component) {\r\n            dependencies.add(context.component, key.string);\r\n        }\r\n    }\r\n    (_a = store) === null || _a === void 0 ? void 0 : _a.addWriteListener(writeListener);\r\n    (_b = store) === null || _b === void 0 ? void 0 : _b.addReadListener(readListener);\r\n    let context = new Context_1.default(container);\r\n    context.onDispose = (component) => {\r\n        dependencies.remove(component);\r\n    };\r\n    // now render our main component\r\n    context.beginRender(container);\r\n    context.render(componentType, componentProperties);\r\n    context.endRender();\r\n    //  return a function which can be used to unbind this\r\n    return () => {\r\n        var _a, _b;\r\n        (_a = store) === null || _a === void 0 ? void 0 : _a.removeWriteListener(writeListener);\r\n        (_b = store) === null || _b === void 0 ? void 0 : _b.removeReadListener(readListener);\r\n    };\r\n}\r\nexports.default = bindComponentToDom;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Context_1 = __importDefault(require(\"../../Context\"));\r\nconst Model_1 = __importDefault(require(\"../../../data/Model\"));\r\nconst Key_1 = __importDefault(require(\"../../../data/Key\"));\r\nconst FocusState_1 = __importDefault(require(\"../../../model/FocusState\"));\r\nconst State_1 = __importDefault(require(\"../../../data/State\"));\r\nconst functions_1 = require(\"../../../ui/html/functions\");\r\nconst html = __importStar(require(\"../\"));\r\nconst canSelect = {\r\n    text: true,\r\n    textarea: true,\r\n    password: true,\r\n    url: true,\r\n    search: true\r\n};\r\nlet InputState = class InputState extends State_1.default {\r\n};\r\n__decorate([\r\n    Model_1.default.property({ type: \"string\", default: \"\" })\r\n], InputState.prototype, \"value\", void 0);\r\nInputState = __decorate([\r\n    Model_1.default.class()\r\n], InputState);\r\nexports.InputState = InputState;\r\nexports.default = Context_1.default.component((c, p) => {\r\n    let { id, value, type = \"text\", name, title, class: className, style, pattern, autocomplete, autoselect, placeholder, required, validateFailMessage: string, onkeyup, onclick, onfocus, oninput, onchange, onkeydown, onkeypress, onconfirm, oncancel } = p;\r\n    let key = Key_1.default.create(InputState, id);\r\n    let focusState = c.store.peek(FocusState_1.default.key);\r\n    let inputState = c.store.peek(key);\r\n    if (value == null) {\r\n        value = inputState.value;\r\n    }\r\n    function saveState(input) {\r\n        c.store.patch(FocusState_1.default.key, { id, start: input.selectionStart, end: input.selectionEnd, direction: input.selectionDirection });\r\n        c.store.patch(key, { value: input.value });\r\n    }\r\n    function maybeRestoreStateOnFocus(input) {\r\n        if (focusState.id === id && canSelect[type]) {\r\n            input.selectionStart = focusState.start;\r\n            input.selectionEnd = focusState.end;\r\n            input.selectionDirection = focusState.direction;\r\n        }\r\n        c.store.patch(FocusState_1.default.key, { id });\r\n    }\r\n    let props = {\r\n        type: type === \"textarea\" ? undefined : type,\r\n        id, value, name, title, class: className,\r\n        style, pattern, autocomplete, placeholder, required,\r\n        autofocus: focusState.id === id,\r\n        onkeydown(e) {\r\n            if (onkeydown) {\r\n                onkeydown.call(this, e);\r\n            }\r\n            if (e.key === \"Enter\") {\r\n                if (onconfirm) {\r\n                    onconfirm.call(this, e);\r\n                }\r\n            }\r\n            if (e.key === \"Escape\") {\r\n                if (oncancel) {\r\n                    oncancel.call(this, e);\r\n                }\r\n            }\r\n        },\r\n        onkeypress,\r\n        onchange,\r\n        oninput(e) {\r\n            if (oninput) {\r\n                oninput.call(this, e);\r\n            }\r\n            if (validate) {\r\n                validate();\r\n            }\r\n        },\r\n        onclick(e) {\r\n            saveState(this);\r\n            if (onclick) {\r\n                onclick.call(this, e);\r\n            }\r\n        },\r\n        onkeyup(e) {\r\n            saveState(this);\r\n            if (onkeyup) {\r\n                onkeyup.call(this, e);\r\n            }\r\n        },\r\n        onfocus(e) {\r\n            maybeRestoreStateOnFocus(this);\r\n            if (onfocus) {\r\n                onfocus.call(this, e);\r\n            }\r\n        }\r\n    };\r\n    if (p.pattern) {\r\n        props.pattern = p.pattern;\r\n    }\r\n    if (p.autocomplete != null) {\r\n        props.autocomplete = p.autocomplete ? \"on\" : \"off\";\r\n    }\r\n    let element;\r\n    if (type === \"textarea\") {\r\n        element = c.begin(html.textarea, props);\r\n        if (value != null) {\r\n            c.text(value);\r\n        }\r\n        c.end(html.textarea);\r\n    }\r\n    else {\r\n        element = c.empty(html.input, props);\r\n    }\r\n    if (p.autofocus && element.focus) {\r\n        element.focus();\r\n    }\r\n    if (p.autoselect && element.select) {\r\n        element.select();\r\n    }\r\n    let validate = p.validate ? function () {\r\n        let form = functions_1.getAncestorForm(element);\r\n        if (form) {\r\n            let formValues = functions_1.getFormValues(form);\r\n            let value = element.value;\r\n            let valid = p.validate.call(formValues, value, form);\r\n            console.log('form onchange validate: ' + valid);\r\n            element.setCustomValidity(valid\r\n                ? \"\"\r\n                : (p.validateFailMessage || \"Failed custom validation\"));\r\n        }\r\n    } : null;\r\n    // validate on render in case we are reloading the page, because then change won't be called\r\n    if (validate) {\r\n        validate();\r\n        //  we also have to listen to other form change events\r\n        //  since our validation may depend on them, such as in password confirm\r\n        let form = functions_1.getAncestorForm(element);\r\n        if (form) {\r\n            form.addEventListener(\"input\", (e) => {\r\n                console.log(\"form.input\", e);\r\n            });\r\n            form.addEventListener(\"change\", (e) => {\r\n                console.log(\"form.change\", e);\r\n            });\r\n            form.addEventListener(\"change\", validate);\r\n            return () => form.removeEventListener(\"change\", validate);\r\n        }\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n});\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importDefault(require(\"../math/Vector2\"));\r\nconst Context_1 = __importDefault(require(\"../Context\"));\r\nfunction getClientPosition(element) {\r\n    let bounds = element.getClientRects()[0];\r\n    return new Vector2_1.default(bounds.left, bounds.top);\r\n}\r\nexports.getClientPosition = getClientPosition;\r\nfunction getPosition(e, element = e.target) {\r\n    let bounds = element.getClientRects()[0];\r\n    return new Vector2_1.default(e.clientX - bounds.left, e.clientY - bounds.top);\r\n}\r\nexports.getPosition = getPosition;\r\nfunction isAncestorOrSelf(self, possibleAncestor) {\r\n    for (let node = self; node != null; node = node.parentNode) {\r\n        if (node === possibleAncestor) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isAncestorOrSelf = isAncestorOrSelf;\r\nfunction getAncestor(element, predicate) {\r\n    for (let ancestor = element.parentElement; ancestor != null; ancestor = ancestor.parentElement) {\r\n        if (predicate(ancestor)) {\r\n            return ancestor;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.getAncestor = getAncestor;\r\nfunction getFormValues(element) {\r\n    let values = {};\r\n    // TODO: improve this to query from some class indicator of field\r\n    for (let input of element.querySelectorAll(\"input\")) {\r\n        values[input.name] = input.value;\r\n    }\r\n    return values;\r\n}\r\nexports.getFormValues = getFormValues;\r\nfunction isForm(element) {\r\n    return element instanceof HTMLFormElement;\r\n}\r\nfunction getAncestorForm(element) {\r\n    return getAncestor(element, isForm);\r\n}\r\nexports.getAncestorForm = getAncestorForm;\r\nfunction getEventListenerTarget(name) {\r\n    if (name === \"window\") {\r\n        return window;\r\n    }\r\n    if (name === \"document\") {\r\n        return window.document;\r\n    }\r\n    if (name === \"body\") {\r\n        return window.document.body;\r\n    }\r\n    if (name === \"this\") {\r\n        return Context_1.default.current.lastNode;\r\n    }\r\n    if (name === \"parent\") {\r\n        return Context_1.default.current.lastNode.parentNode;\r\n    }\r\n    let element = document.querySelector(name);\r\n    if (element == null) {\r\n        throw new Error(`Query element not found: ${name}`);\r\n    }\r\n    return element;\r\n}\r\nfunction bindEventListenersInternal(listeners, add = true, boundTargets = {}) {\r\n    for (let targetName in listeners) {\r\n        let target = boundTargets[targetName];\r\n        if (target == null) {\r\n            target = boundTargets[targetName] = getEventListenerTarget(targetName);\r\n        }\r\n        let targetEventListeners = listeners[targetName];\r\n        for (let eventName in targetEventListeners) {\r\n            let eventListener = targetEventListeners[eventName];\r\n            target[add ? \"addEventListener\" : \"removeEventListener\"](eventName, eventListener);\r\n        }\r\n    }\r\n    return boundTargets;\r\n}\r\n/**\r\n * Adds all of the event listeners to their respective elements\r\n * and returns a function which will unbind them all.\r\n */\r\nfunction bindEventListeners(listeners) {\r\n    let boundTargets = bindEventListenersInternal(listeners, true);\r\n    return () => {\r\n        bindEventListenersInternal(listeners, false, boundTargets);\r\n    };\r\n}\r\nexports.bindEventListeners = bindEventListeners;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst HtmlElementFactory_1 = __importDefault(require(\"./HtmlElementFactory\"));\r\nconst defaultAttributes = { class: true, type: true };\r\nfunction factory(tag, attributes = defaultAttributes) {\r\n    return HtmlElementFactory_1.default(tag, attributes);\r\n}\r\nexports.h1 = factory(\"h1\");\r\nexports.h2 = factory(\"h2\");\r\nexports.h3 = factory(\"h3\");\r\nexports.h4 = factory(\"h4\");\r\nexports.h5 = factory(\"h5\");\r\nexports.h6 = factory(\"h6\");\r\nexports.hr = factory(\"hr\");\r\nexports.p = factory(\"p\");\r\nexports.ol = factory(\"ol\");\r\nexports.ul = factory(\"ul\");\r\nexports.li = factory(\"li\");\r\nexports.dl = factory(\"dl\");\r\nexports.dt = factory(\"dt\");\r\nexports.dd = factory(\"dd\");\r\nexports.div = factory(\"div\");\r\nexports.span = factory(\"span\");\r\nexports.footer = factory(\"footer\");\r\nexports.header = factory(\"header\");\r\nexports.a = factory(\"a\");\r\nexports.img = factory(\"img\");\r\nexports.label = factory(\"label\");\r\nexports.button = factory(\"button\");\r\nexports.form = factory(\"form\");\r\nexports.input = factory(\"input\", {\r\n    ...defaultAttributes,\r\n    pattern: true,\r\n    placeholder: true,\r\n    maxlength: true,\r\n    minlength: true,\r\n    readonly: true,\r\n    size: true,\r\n    spellcheck: true\r\n});\r\nexports.select = factory(\"select\");\r\nexports.option = factory(\"option\");\r\nexports.style = factory(\"style\");\r\nexports.textarea = factory(\"textarea\");\r\nexports.canvas = factory(\"canvas\");\r\nexports.iframe = factory(\"iframe\");\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar WindowSize_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Dependent_1 = __importDefault(require(\"../../data/Dependent\"));\r\nconst State_1 = __importDefault(require(\"../../data/State\"));\r\nconst Key_1 = __importDefault(require(\"../../data/Key\"));\r\nconst Store_1 = __importDefault(require(\"../../data/Store\"));\r\nconst functions_1 = require(\"../html/functions\");\r\nlet WindowSize = WindowSize_1 = class WindowSize extends Dependent_1.default {\r\n    static watched(key) {\r\n        function update() {\r\n            Store_1.default.default.patch(WindowSize_1.key, { width: window.innerWidth, height: window.innerHeight });\r\n        }\r\n        update();\r\n        return functions_1.bindEventListeners({\r\n            window: {\r\n                resize() {\r\n                    update();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nWindowSize.key = Key_1.default.create(WindowSize_1, \"singleton\");\r\n__decorate([\r\n    State_1.default.property({ type: 'integer' })\r\n], WindowSize.prototype, \"width\", void 0);\r\n__decorate([\r\n    State_1.default.property({ type: 'integer' })\r\n], WindowSize.prototype, \"height\", void 0);\r\nWindowSize = WindowSize_1 = __decorate([\r\n    State_1.default.class()\r\n], WindowSize);\r\nexports.default = WindowSize;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction localize(literals, ...args) {\r\n    let result = [];\r\n    for (let i = 0; i < literals.length; i++) {\r\n        result.push(literals[i]);\r\n        if (args[i] !== undefined)\r\n            result.push(args[i]);\r\n    }\r\n    return result.join(\"\");\r\n}\r\nexports.default = localize;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector3_1 = __importDefault(require(\"./Vector3\"));\r\nconst _1 = require(\".\");\r\n/**\r\n * A Plane is represented by a normal vector\r\n * and a distance from the origin to the closest point on the plane.\r\n */\r\nclass Plane {\r\n    constructor(normal, distance) {\r\n        this.normal = normal;\r\n        this.distance = distance;\r\n    }\r\n    getClosestPointToOrigin() {\r\n        return new Vector3_1.default(this.normal.x * this.distance, this.normal.y * this.distance, this.normal.z * this.distance);\r\n    }\r\n    intersects(shape) {\r\n        let point = this.getClosestPointToOrigin();\r\n        let max = shape.support(this.normal);\r\n        let min = shape.support(this.normal.negate());\r\n        let pMax = max.subtract(point);\r\n        let pMin = min.subtract(point);\r\n        let maxDist = this.normal.dot(pMax);\r\n        let minDist = this.normal.dot(pMin);\r\n        return Math.sign(maxDist) != Math.sign(minDist);\r\n    }\r\n    intersectsCapsule(capsule) {\r\n        return this.intersects(capsule);\r\n    }\r\n    getClosestPoint(line) {\r\n        let point = this.getClosestPointToOrigin();\r\n        let ap = point.subtract(line.a);\r\n        let distance = ap.dot(this.normal);\r\n        if (_1.equivalent(distance, 0))\r\n            return line.a;\r\n        let heading = line.b.subtract(line.a);\r\n        let speed = heading.dot(this.normal);\r\n        if (_1.equivalent(speed, 0))\r\n            return line.a.subtract(this.normal.projection(line.a));\r\n        let dt = distance / speed;\r\n        return line.getPosition(dt);\r\n    }\r\n}\r\nexports.default = Plane;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importDefault(require(\"./Vector2\"));\r\nconst Vector3_1 = __importDefault(require(\"./Vector3\"));\r\nconst Plane_1 = __importDefault(require(\"./Plane\"));\r\nconst _1 = require(\".\");\r\nclass Rectangle {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    get top() { return this.y; }\r\n    get left() { return this.x; }\r\n    get bottom() { return this.y + this.height; }\r\n    get right() { return this.x + this.width; }\r\n    get topLeft() { return new Vector2_1.default(this.x, this.y); }\r\n    get bottomRight() { return new Vector2_1.default(this.right, this.bottom); }\r\n    get topRight() { return new Vector2_1.default(this.right, this.bottom); }\r\n    get bottomLeft() { return new Vector2_1.default(this.left, this.bottom); }\r\n    contains(x, y) {\r\n        return x >= this.left && x <= this.right\r\n            && y >= this.top && y <= this.bottom;\r\n    }\r\n    containsPoint(point) {\r\n        return this.contains(point.x, point.y);\r\n    }\r\n    add(b) {\r\n        if (!b || b.isZero) {\r\n            return this;\r\n        }\r\n        return new Rectangle(this.x - b.left, this.y - b.top, this.width + b.left + b.right, this.height + b.top + b.bottom);\r\n    }\r\n    subtract(b) {\r\n        if (!b || b.isZero) {\r\n            return this;\r\n        }\r\n        return new Rectangle(this.x + b.left, this.y + b.top, this.width - b.left - b.right, this.height - b.top - b.bottom);\r\n    }\r\n    intersectsCapsule(capsule) {\r\n        //  TODO: Fix this shit\r\n        let line = capsule.line();\r\n        let pointInRect = this.getClosestPoint(line);\r\n        let alpha = line.getAlpha(pointInRect);\r\n        let radius = capsule.getRadius(alpha);\r\n        let pointInLine = line.getPosition(alpha);\r\n        return pointInRect.subtract(pointInLine).length() <= (radius + _1.epsilon) ? pointInRect : null;\r\n        // let dx = Math.min(Math.abs(pointInRect.x - this.left), Math.abs(pointInRect.x - this.right))\r\n        // let dy = Math.min(Math.abs(pointInRect.y - this.top), Math.abs(pointInRect.y - this.bottom))\r\n        // return (radius * radius) <= (dx * dx + dy * dy) ? pointInRect : null\r\n    }\r\n    intersectsLine(line) {\r\n        let point = this.getPlane().getClosestPoint(line);\r\n        return this.containsPoint(point);\r\n    }\r\n    /**\r\n     * Returns the closest point to the line which lies within this bounding shape.\r\n     * If multiple points intersect the line the point closest to 'a' is preferred.\r\n     */\r\n    getClosestPoint(line) {\r\n        let point = this.getPlane().getClosestPoint(line);\r\n        if (this.containsPoint(point)) {\r\n            return point;\r\n        }\r\n        let x = _1.clamp(point.x, this.left, this.right);\r\n        let y = _1.clamp(point.y, this.top, this.bottom);\r\n        return new Vector3_1.default(x, y, 0);\r\n    }\r\n    /**\r\n     * Returns the plane this Rectangle lies on.\r\n     * The plane intersects the origin and the normal is in the positive z direction.\r\n     */\r\n    getPlane() {\r\n        return new Plane_1.default(new Vector3_1.default(0, 0, 1), 0);\r\n    }\r\n    combine(b) {\r\n        if (b === this || this.containsRectangle(b)) {\r\n            return this;\r\n        }\r\n        if (b.containsRectangle(this)) {\r\n            return b;\r\n        }\r\n        let left = Math.min(this.left, b.left);\r\n        let right = Math.max(this.right, b.right);\r\n        let top = Math.min(this.top, b.top);\r\n        let bottom = Math.max(this.bottom, b.bottom);\r\n        return new Rectangle(left, top, right - left, bottom - top);\r\n    }\r\n    containsRectangle(b) {\r\n        return this.contains(b.left, b.top) && this.contains(b.right, b.bottom);\r\n    }\r\n    static getBounds(rectangles) {\r\n        if (rectangles.length === 0) {\r\n            return Rectangle.empty;\r\n        }\r\n        let result = rectangles[0];\r\n        for (let i = 1; i < rectangles.length; i++) {\r\n            result = result.combine(rectangles[i]);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.default = Rectangle;\r\nRectangle.empty = Object.freeze(new Rectangle(0, 0, 0, 0));\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar Vector2_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector3_1 = __importDefault(require(\"./Vector3\"));\r\nconst _1 = require(\".\");\r\nconst Rectangle_1 = __importDefault(require(\"./Rectangle\"));\r\nconst Structure_1 = __importDefault(require(\"../../data/Structure\"));\r\nlet Vector2 = Vector2_1 = class Vector2 extends Structure_1.default {\r\n    constructor(x = 0, y = 0) {\r\n        super();\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        yield this.x;\r\n        yield this.y;\r\n    }\r\n    add(v) {\r\n        return new Vector2_1(this.x + v.x, this.y + v.y);\r\n    }\r\n    subtract(v) {\r\n        return new Vector2_1(this.x - v.x, this.y - v.y);\r\n    }\r\n    multiply(v) {\r\n        return new Vector2_1(this.x * v.x, this.y * v.y);\r\n    }\r\n    scale(f) {\r\n        return new Vector2_1(this.x * f, this.y * f);\r\n    }\r\n    negate() {\r\n        return new Vector2_1(-this.x, -this.y);\r\n    }\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    cross(v) {\r\n        return new Vector3_1.default(0, 0, this.x * v.y - this.y * v.x);\r\n    }\r\n    lerp(v, alpha) {\r\n        return new Vector2_1(this.x + alpha * (v.x - this.x), this.y + alpha * (v.y - this.y));\r\n    }\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    length() {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n    normalize() {\r\n        let invLength = 1 / this.length();\r\n        return new Vector2_1(this.x * invLength, this.y * invLength);\r\n    }\r\n    equals(v) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n    equivalent(v) {\r\n        return _1.equivalent(this.x, v.x)\r\n            && _1.equivalent(this.y, v.y);\r\n    }\r\n    static getBounds(points) {\r\n        if (points.length == 0) {\r\n            return new Rectangle_1.default(0, 0, 0, 0);\r\n        }\r\n        let minX, maxX, minY, maxY;\r\n        for (let { x, y } of points) {\r\n            if (minX == null) {\r\n                minX = maxX = x;\r\n                minY = maxY = y;\r\n            }\r\n            else {\r\n                minX = Math.min(minX, x);\r\n                maxX = Math.max(maxX, x);\r\n                minY = Math.min(minY, y);\r\n                maxY = Math.max(maxY, y);\r\n            }\r\n        }\r\n        return new Rectangle_1.default(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n    writeTo(array, index) {\r\n        array[index + 0] = this.x;\r\n        array[index + 1] = this.y;\r\n    }\r\n    toArray() {\r\n        return [this.x, this.y];\r\n    }\r\n    toFloat32Array() {\r\n        return new Float32Array(this.toArray());\r\n    }\r\n    toString() {\r\n        return `(${this.x},${this.y})`;\r\n    }\r\n};\r\nVector2.zero = Object.freeze(new Vector2_1(0, 0));\r\nVector2 = Vector2_1 = __decorate([\r\n    Structure_1.default.class()\r\n], Vector2);\r\nexports.default = Vector2;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar Vector3_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nconst Structure_1 = __importDefault(require(\"../../data/Structure\"));\r\nlet Vector3 = Vector3_1 = class Vector3 extends Structure_1.default {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        super();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        yield this.x;\r\n        yield this.y;\r\n        yield this.z;\r\n    }\r\n    static add(vectors) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let z = 0;\r\n        for (let v of vectors) {\r\n            x += v.x;\r\n            y += v.y;\r\n            z += v.z;\r\n        }\r\n        return new Vector3_1(x, y, z);\r\n    }\r\n    add(v) {\r\n        return new Vector3_1(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n    subtract(v) {\r\n        return new Vector3_1(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n    multiply(v) {\r\n        return new Vector3_1(this.x * v.x, this.y * v.y, this.z * v.z);\r\n    }\r\n    scale(f) {\r\n        return new Vector3_1(this.x * f, this.y * f, this.z * f);\r\n    }\r\n    negate() {\r\n        return new Vector3_1(-this.x, -this.y, -this.z);\r\n    }\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n    }\r\n    cross(v) {\r\n        return new Vector3_1(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\r\n    }\r\n    equals(v) {\r\n        return this.x === v.x && this.y === v.y && this.z === v.z;\r\n    }\r\n    equivalent(v) {\r\n        return _1.equivalent(this.x, v.x)\r\n            && _1.equivalent(this.y, v.y)\r\n            && _1.equivalent(this.z, v.z);\r\n    }\r\n    lerp(v, alpha) {\r\n        return new Vector3_1(this.x + alpha * (v.x - this.x), this.y + alpha * (v.y - this.y), this.z + alpha * (v.z - this.z));\r\n    }\r\n    projection(v) {\r\n        return this.scale(v.dot(this) / this.lengthSquared());\r\n    }\r\n    rejection(v) {\r\n        // return v.subtract( this.parallelComponent(v) )\r\n        let s = v.dot(this) / this.lengthSquared();\r\n        return new Vector3_1(v.x - this.x * s, v.y - this.y * s, v.z - this.z * s);\r\n    }\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n    length() {\r\n        return Math.hypot(this.x, this.y, this.z);\r\n    }\r\n    normalize() {\r\n        let invLength = 1 / this.length();\r\n        return new Vector3_1(this.x * invLength, this.y * invLength, this.z * invLength);\r\n    }\r\n    translate(v) {\r\n        return this.add(v);\r\n    }\r\n    transform(m) {\r\n        let { x, y, z } = this;\r\n        let w = m.m03 * x + m.m13 * y + m.m23 * z + m.m33;\r\n        w = w || 1.0;\r\n        return new Vector3_1((m.m00 * x + m.m10 * y + m.m20 * z + m.m30) / w, (m.m01 * x + m.m11 * y + m.m21 * z + m.m31) / w, (m.m02 * x + m.m12 * y + m.m22 * z + m.m32) / w);\r\n    }\r\n    static random(radius) {\r\n        let u = Math.random();\r\n        let v = Math.random();\r\n        let theta = 2 * Math.PI * u;\r\n        let phi = Math.acos(2 * v - 1);\r\n        return new Vector3_1(Math.sin(theta) * Math.cos(phi) * radius, Math.sin(theta) * Math.sin(phi) * radius, Math.cos(theta) * radius);\r\n    }\r\n    // https://www.habrador.com/tutorials/interpolation/1-catmull-rom-splines/\r\n    // //Returns a position between 4 Vector3 with Catmull-Rom spline algorithm\r\n    // //http://www.iquilezles.org/www/articles/minispline/minispline.htm\r\n    // Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)\r\n    // {\r\n    // \t//The coefficients of the cubic polynomial (except the 0.5f * which I added later for performance)\r\n    // \tVector3 a = 2f * p1;\r\n    // \tVector3 b = p2 - p0;\r\n    // \tVector3 c = 2f * p0 - 5f * p1 + 4f * p2 - p3;\r\n    // \tVector3 d = -p0 + 3f * p1 - 3f * p2 + p3;\r\n    // \t//The cubic polynomial: a + b * t + c * t^2 + d * t^3\r\n    // \tVector3 pos = 0.5f * (a + (b * t) + (c * t * t) + (d * t * t * t));\r\n    // \treturn pos;\r\n    // }\r\n    writeTo(array, index) {\r\n        array[index + 0] = this.x;\r\n        array[index + 1] = this.y;\r\n        array[index + 2] = this.z;\r\n    }\r\n    toArray() {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n    toFloat32Array() {\r\n        return new Float32Array(this.toArray());\r\n    }\r\n    toString() {\r\n        return `(${this.x},${this.y},${this.z})`;\r\n    }\r\n};\r\nVector3.zero = new Vector3_1(0, 0, 0);\r\nVector3 = Vector3_1 = __decorate([\r\n    Structure_1.default.class()\r\n], Vector3);\r\nexports.default = Vector3;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.epsilon = 0.000001;\r\nfunction equivalent(a, b) {\r\n    return Math.abs(a - b) <= exports.epsilon * Math.max(1, Math.abs(a), Math.abs(b));\r\n}\r\nexports.equivalent = equivalent;\r\nfunction clamp(value, min = 0, max = 1) {\r\n    return value < min ? min : value > max ? max : value;\r\n}\r\nexports.clamp = clamp;\r\nfunction lerp(a, b, alpha = 0.5) {\r\n    if (typeof a === \"number\") {\r\n        return a * (1 - alpha) + b * alpha;\r\n    }\r\n    return a.lerp(b, alpha);\r\n}\r\nexports.lerp = lerp;\r\nfunction easeInOutCubic(x) {\r\n    return x ** 2 * 3 - x ** 3 * 2;\r\n}\r\nexports.easeInOutCubic = easeInOutCubic;\r\n// Source: https://en.wikipedia.org/wiki/Xorshift\r\nfunction randomNumberGenerator(seed = Number.MAX_SAFE_INTEGER) {\r\n    let x = seed;\r\n    let coef = 1 / (1 << 31);\r\n    return function random(min = 0, max = 1) {\r\n        x ^= x << 13;\r\n        x ^= x >> 7;\r\n        x ^= x << 17;\r\n        let r = Math.abs(x * coef);\r\n        return min + r * (max - min);\r\n    };\r\n}\r\nexports.randomNumberGenerator = randomNumberGenerator;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SoundContext {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    play(url, properties) {\r\n        let stack = this.cache.get(url);\r\n        if (stack == null) {\r\n            this.cache.set(url, stack = []);\r\n        }\r\n        let audio = stack.pop();\r\n        if (audio == null) {\r\n            stack.push(audio = new Audio(url));\r\n            audio.onended = (e) => {\r\n                // when the audio ends push it back onto the stack\r\n                stack.push(audio);\r\n            };\r\n        }\r\n        Object.assign(audio, properties);\r\n        audio.play();\r\n    }\r\n}\r\nexports.default = SoundContext;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst empty = new Set();\r\n/**\r\n * Efficiently tracks dependency relationships between objects.\r\n * It has close to O(1) performance on add, remove and get.\r\n */\r\nclass DependencyTracker {\r\n    constructor() {\r\n        this.dependeesToDependents = new Map();\r\n        this.dependentsToDependees = new Map();\r\n    }\r\n    add(dependent, dependee) {\r\n        let dependents = this.dependeesToDependents.get(dependee);\r\n        if (dependents == null)\r\n            this.dependeesToDependents.set(dependee, dependents = new Set());\r\n        dependents.add(dependent);\r\n        let dependees = this.dependentsToDependees.get(dependent);\r\n        if (dependees == null)\r\n            this.dependentsToDependees.set(dependent, dependees = new Set());\r\n        dependees.add(dependee);\r\n    }\r\n    remove(dependent) {\r\n        let dependees = this.dependentsToDependees.get(dependent);\r\n        if (dependees != null) {\r\n            for (let dependee of dependees) {\r\n                let dependents = this.dependeesToDependents.get(dependee);\r\n                if (dependents != null) {\r\n                    dependents.delete(dependent);\r\n                    if (dependents.size === 0)\r\n                        this.dependeesToDependents.delete(dependee);\r\n                }\r\n            }\r\n        }\r\n        this.dependentsToDependees.delete(dependent);\r\n    }\r\n    getDependents(dependee) {\r\n        return this.dependeesToDependents.get(dependee) || empty;\r\n    }\r\n    getDependees(dependent) {\r\n        return this.dependentsToDependees.get(dependent) || empty;\r\n    }\r\n}\r\nexports.default = DependencyTracker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"./common\");\r\n//  shallow clone, doesn't preserve type\r\nfunction clone(value) {\r\n    if (common_1.isPrimitive(value)) {\r\n        return value;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.slice(0);\r\n    }\r\n    return Object.assign({}, value);\r\n}\r\nfunction clonePatch(target, patch) {\r\n    if (!common_1.isPlainObject(patch)) {\r\n        return patch;\r\n    }\r\n    if (common_1.isEmptyObject(patch)) {\r\n        return target;\r\n    }\r\n    if (common_1.isPrimitive(target)) {\r\n        target = {};\r\n    }\r\n    let cloneValues = clone(target);\r\n    for (let property in patch) {\r\n        let newValue = clonePatch(target[property], patch[property]);\r\n        if (newValue != null) {\r\n            cloneValues[property] = newValue;\r\n        }\r\n        else {\r\n            delete cloneValues[property];\r\n        }\r\n    }\r\n    if (Array.isArray(target) || common_1.isPlainObject(target)) {\r\n        return cloneValues;\r\n    }\r\n    return new target.constructor(cloneValues);\r\n}\r\nexports.default = clonePatch;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isPrimitive(value) {\r\n    return value == null || typeof value !== \"object\";\r\n}\r\nexports.isPrimitive = isPrimitive;\r\nfunction isPlainObject(value) {\r\n    return value != null && value.constructor === Object;\r\n}\r\nexports.isPlainObject = isPlainObject;\r\nfunction isEmptyObject(value) {\r\n    for (let property in value) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexports.isEmptyObject = isEmptyObject;\r\nfunction deepFreeze(value) {\r\n    if (!isPrimitive(value)) {\r\n        for (let property in value) {\r\n            deepFreeze(value[property]);\r\n        }\r\n        Object.freeze(value);\r\n    }\r\n    return value;\r\n}\r\nexports.deepFreeze = deepFreeze;\r\n//  maps an objects values to a new object similar to array.map\r\nfunction map(collection, convert) {\r\n    if (Array.isArray(collection))\r\n        return collection.map(convert);\r\n    let result = {};\r\n    for (let name in collection) {\r\n        result[name] = convert(collection[name], name);\r\n    }\r\n    return result;\r\n}\r\nexports.map = map;\r\nfunction memoize(fn, cache = new Map()) {\r\n    return function (arg) {\r\n        let result = cache.get(arg);\r\n        if (result === undefined) {\r\n            cache.set(arg, result = fn.apply(this, arguments));\r\n        }\r\n        return result;\r\n    };\r\n}\r\nexports.memoize = memoize;\r\nfunction getPath(ancestor, descendant) {\r\n    if (ancestor === descendant) {\r\n        return [];\r\n    }\r\n    if (ancestor && typeof ancestor === \"object\") {\r\n        for (let name in ancestor) {\r\n            let child = ancestor[name];\r\n            let path = getPath(child, descendant);\r\n            if (path != null) {\r\n                return [name, ...path];\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.getPath = getPath;\r\nfunction traverse(value, schema, callback, ancestors = [], path = []) {\r\n    callback(value, schema, ancestors, path);\r\n    // traverse any children.\r\n    if (value != null && typeof value === \"object\") {\r\n        if (Array.isArray(value)) {\r\n            if (schema.items) {\r\n                ancestors.push(value);\r\n                for (let i = 0; i < value.length; i++) {\r\n                    let itemSchema = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\r\n                    if (itemSchema) {\r\n                        path.push(i);\r\n                        traverse(value[i], itemSchema, callback, ancestors, path);\r\n                        path.pop();\r\n                    }\r\n                }\r\n                ancestors.pop();\r\n            }\r\n        }\r\n        else {\r\n            ancestors.push(value);\r\n            for (let name in value) {\r\n                let propertySchema = schema.properties && schema.properties[name] || schema.additionalProperties && schema.additionalProperties;\r\n                if (propertySchema) {\r\n                    path.push(name);\r\n                    traverse(value[name], propertySchema, callback, ancestors, path);\r\n                    path.pop();\r\n                }\r\n            }\r\n            // also traverse any schema properties that we didn't get in \r\n            if (schema.properties) {\r\n                for (let name in schema.properties) {\r\n                    if (!value.hasOwnProperty(name)) {\r\n                        let propertySchema = schema.properties[name];\r\n                        if (propertySchema) {\r\n                            path.push(name);\r\n                            traverse(value[name], propertySchema, callback, ancestors, path);\r\n                            path.pop();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ancestors.pop();\r\n        }\r\n    }\r\n}\r\nexports.traverse = traverse;\r\nfunction argmax(values, func) {\r\n    if (values.length == 0)\r\n        throw new Error(\"Values must be non-empty.\");\r\n    let indexOfMax = 0;\r\n    let max = func(values[0]);\r\n    for (let i = 1; i < values.length; i++) {\r\n        let value = func(values[i]);\r\n        if (value > max) {\r\n            indexOfMax = i;\r\n            max = value;\r\n        }\r\n    }\r\n    return {\r\n        index: indexOfMax,\r\n        value: max,\r\n        argument: values[indexOfMax]\r\n    };\r\n}\r\nexports.argmax = argmax;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet buffer = new Uint8Array(16);\r\nfunction guid() {\r\n    let array = Array(20);\r\n    window.crypto.getRandomValues(buffer);\r\n    for (let i = 0; i < buffer.length; i++) {\r\n        let string = buffer[i].toString(16);\r\n        if (string.length < 2)\r\n            array.push(\"0\");\r\n        array.push(string);\r\n        if (i === 4 || i === 6 || i === 8 || i === 10)\r\n            array.push(\"-\");\r\n    }\r\n    return array.join(\"\");\r\n}\r\nexports.format = /^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$/i;\r\nexports.default = guid;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction formatPhoneES164(phone) {\r\n    return phone.replace(/[\\(\\) -]/g, \"\");\r\n}\r\nexports.formatPhoneES164 = formatPhoneES164;\r\nfunction formatPhoneNumberUSA(phone) {\r\n    let n = [];\r\n    for (let i = 0; i < phone.length; i++) {\r\n        let char = phone[i];\r\n        if (/[0-9]/.test(char)) {\r\n            n.push(char);\r\n        }\r\n    }\r\n    if (n.length === 10) {\r\n        n.unshift(\"1\");\r\n    }\r\n    if (n.length !== 11) {\r\n        return phone;\r\n    }\r\n    return `+${n[0]} (${n[1]}${n[2]}${n[3]}) ${n[4]}${n[5]}${n[6]}-${n[7]}${n[8]}${n[9]}${n[10]}`;\r\n}\r\nexports.formatPhoneNumberUSA = formatPhoneNumberUSA;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Color;\r\n(function (Color) {\r\n    Color[Color[\"White\"] = 0] = \"White\";\r\n    Color[Color[\"Black\"] = 1] = \"Black\";\r\n})(Color = exports.Color || (exports.Color = {}));\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Type_1 = require(\"./Type\");\r\nconst Color_1 = require(\"./Color\");\r\nconst Piece_1 = __importDefault(require(\"./Piece\"));\r\nconst Position_1 = __importDefault(require(\"./Position\"));\r\nconst Move_1 = __importDefault(require(\"./Move\"));\r\nconst common_1 = require(\"./common\");\r\nconst pieceValues_1 = __importDefault(require(\"./pieceValues\"));\r\nconst Pos = Position_1.default.create;\r\nconst posX = Position_1.default.get.x;\r\nconst posY = Position_1.default.get.y;\r\nconst EMPTY = Piece_1.default.create(0, 0, 0);\r\nvar Ternary;\r\n(function (Ternary) {\r\n    Ternary[Ternary[\"always\"] = 0] = \"always\";\r\n    Ternary[Ternary[\"never\"] = 1] = \"never\";\r\n    Ternary[Ternary[\"either\"] = 2] = \"either\";\r\n})(Ternary || (Ternary = {}));\r\nclass Engine {\r\n    constructor() {\r\n        try {\r\n            window.engine = this;\r\n        }\r\n        catch (e) { }\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.pieces = new Uint8Array(64);\r\n        this.ids = new Uint8Array(64);\r\n        for (let i = 0; i < 64; i++)\r\n            this.ids[i] = i;\r\n        this.turn = Color_1.Color.White;\r\n        this.netMaterialValue = 0;\r\n        this.history = [];\r\n    }\r\n    standardSetup() {\r\n        for (let x = 0; x < 8; x++) {\r\n            let type = Piece_1.default.get.type(common_1.charToPiece(\"rnbqkbnr\"[x]));\r\n            this.pieces[Pos(x, 0)] = Piece_1.default.create(type, Color_1.Color.Black, 0);\r\n            this.pieces[Pos(x, 1)] = Piece_1.default.create(Type_1.Type.Pawn, Color_1.Color.Black, 0);\r\n            this.pieces[Pos(x, 7)] = Piece_1.default.create(type, Color_1.Color.White, 0);\r\n            this.pieces[Pos(x, 6)] = Piece_1.default.create(Type_1.Type.Pawn, Color_1.Color.White, 0);\r\n        }\r\n        return this;\r\n    }\r\n    static parseBoard(board) {\r\n        let rows = board.split(\"\\n\")\r\n            .filter((row) => row.length > 0) // Remove empty lines.\r\n            .map((row) => row.replace(/ /g, \"\") // Remove whitespace.\r\n            .split(\"\") // Convert to char array.\r\n            .map(common_1.charToPiece));\r\n        let engine = new Engine();\r\n        for (let y = 0; y < 8; y++) {\r\n            for (let x = 0; x < 8; x++) {\r\n                engine.pieces[Pos(x, y)] = rows[y][x];\r\n            }\r\n        }\r\n        return engine;\r\n    }\r\n    prettyString(moves) {\r\n        let positions = moves ? moves.map((move) => Move_1.default.get.to(move)) : [];\r\n        let result = [];\r\n        for (let y = 0; y < 8; y++) {\r\n            let row = [];\r\n            for (let x = 0; x < 8; x++) {\r\n                let char;\r\n                if (positions.indexOf(Position_1.default.create(x, y)) > -1)\r\n                    char = \"#\";\r\n                else\r\n                    char = common_1.pieceToChar(this.pieces[Pos(x, y)]);\r\n                row.push(char + \" \");\r\n            }\r\n            result.push(row.join(\"\"));\r\n        }\r\n        return result.join(\"\\n\");\r\n    }\r\n    static compareBoards(a, b) {\r\n        let format = (x) => (x.split(\"\\n\")\r\n            .map((x) => x.trim())\r\n            .filter((x) => x.length > 0)).join(\"\\n\");\r\n        return format(a) === format(b);\r\n    }\r\n    positionString() {\r\n        let parts = new Array(24);\r\n        let i = 0;\r\n        for (let y = 0; y < 8; y++)\r\n            for (let x = 0; x < 8; x += 3)\r\n                parts[i++] = String.fromCharCode((this.pieces[Pos(x, y)] << 10) |\r\n                    (this.pieces[Pos(x + 1, y)] << 5) |\r\n                    (this.pieces[Pos(x + 2, y)] || 0));\r\n        return parts.join(\"\");\r\n    }\r\n    toString() {\r\n        let parts = new Array();\r\n        for (let move of this.history)\r\n            parts.push(String.fromCharCode(Move_1.default.set.firstMove(Move_1.default.set.captured(move, 0), 0)));\r\n        return parts.join(\"\");\r\n    }\r\n    static fromString(movesString) {\r\n        let engine = new Engine();\r\n        engine.standardSetup();\r\n        for (let i = 0; i < movesString.length; i++)\r\n            engine.doMove(movesString.charCodeAt(i));\r\n        return engine;\r\n    }\r\n    static fromHistory(moves) {\r\n        let engine = new Engine();\r\n        engine.standardSetup();\r\n        for (let move of moves)\r\n            engine.doMove(move);\r\n        return engine;\r\n    }\r\n    // Move Generation\r\n    slide(from, dx, dy, max, color, selfCaptures, captures, moves) {\r\n        let count = 0;\r\n        let x = posX(from);\r\n        let y = posY(from);\r\n        for (let i = 1; i <= max; i++) {\r\n            x += dx;\r\n            y += dy;\r\n            if (x < 0 || x >= 8 || y < 0 || y >= 8)\r\n                break;\r\n            let to = Pos(x, y);\r\n            let obstacle = this.pieces[to];\r\n            let move = Move_1.default.create(to, from, obstacle, 0);\r\n            if (Piece_1.default.get.type(obstacle) !== Type_1.Type.Empty) {\r\n                if (captures !== Ternary.never && Piece_1.default.get.color(obstacle) !== color) {\r\n                    moves.push(move);\r\n                    return ++count;\r\n                }\r\n                break;\r\n            }\r\n            else if (captures !== Ternary.always) {\r\n                moves.push(move);\r\n                ++count;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    slideCardinals(pos, max, color, selfCaptures, captures, moves) {\r\n        this.slide(pos, 1, 0, max, color, selfCaptures, captures, moves);\r\n        this.slide(pos, -1, 0, max, color, selfCaptures, captures, moves);\r\n        this.slide(pos, 0, -1, max, color, selfCaptures, captures, moves);\r\n        this.slide(pos, 0, 1, max, color, selfCaptures, captures, moves);\r\n    }\r\n    slideDiagonals(pos, max, color, selfCaptures, captures, moves) {\r\n        this.slide(pos, 1, 1, max, color, selfCaptures, captures, moves);\r\n        this.slide(pos, -1, 1, max, color, selfCaptures, captures, moves);\r\n        this.slide(pos, 1, -1, max, color, selfCaptures, captures, moves);\r\n        this.slide(pos, -1, -1, max, color, selfCaptures, captures, moves);\r\n    }\r\n    generateMoves(pos, type, color, moved, selfCaptures, captures) {\r\n        let moves = [];\r\n        switch (type) {\r\n            case Type_1.Type.Pawn: {\r\n                let dy = color == Color_1.Color.White ? -1 : 1;\r\n                this.slide(pos, 0, dy, moved ? 1 : 2, color, selfCaptures, Ternary.never, moves);\r\n                this.slide(pos, -1, dy, 1, color, selfCaptures, Ternary.always, moves);\r\n                this.slide(pos, 1, dy, 1, color, selfCaptures, Ternary.always, moves);\r\n                if ((Position_1.default.get.y(pos) == 6 && color == Color_1.Color.Black) ||\r\n                    (Position_1.default.get.y(pos) == 1 && color == Color_1.Color.White)) {\r\n                    for (let i = 0; i < moves.length; i++)\r\n                        moves[i] = Move_1.default.set.promotion(moves[i], 1);\r\n                }\r\n                break;\r\n            }\r\n            case Type_1.Type.Knight: {\r\n                // QI, +x, +y\r\n                this.slide(pos, 2, 1, 1, color, selfCaptures, captures, moves);\r\n                this.slide(pos, 1, 2, 1, color, selfCaptures, captures, moves);\r\n                // QII, -x, +y\r\n                this.slide(pos, -2, 1, 1, color, selfCaptures, captures, moves);\r\n                this.slide(pos, -1, 2, 1, color, selfCaptures, captures, moves);\r\n                // QIII, -x, -y\r\n                this.slide(pos, -2, -1, 1, color, selfCaptures, captures, moves);\r\n                this.slide(pos, -1, -2, 1, color, selfCaptures, captures, moves);\r\n                // QIV, +x, -y\r\n                this.slide(pos, 2, -1, 1, color, selfCaptures, captures, moves);\r\n                this.slide(pos, 1, -2, 1, color, selfCaptures, captures, moves);\r\n                break;\r\n            }\r\n            case Type_1.Type.Bishop: {\r\n                this.slideDiagonals(pos, 7, color, selfCaptures, captures, moves);\r\n                break;\r\n            }\r\n            case Type_1.Type.Rook: {\r\n                this.slideCardinals(pos, 7, color, selfCaptures, captures, moves);\r\n                break;\r\n            }\r\n            case Type_1.Type.Queen: {\r\n                this.slideDiagonals(pos, 7, color, selfCaptures, captures, moves);\r\n                this.slideCardinals(pos, 7, color, selfCaptures, captures, moves);\r\n                break;\r\n            }\r\n            case Type_1.Type.King: {\r\n                this.slideDiagonals(pos, 1, color, selfCaptures, captures, moves);\r\n                this.slideCardinals(pos, 1, color, selfCaptures, captures, moves);\r\n                if (!moved) {\r\n                    if (this.canCastle(pos, color, -1))\r\n                        moves.push(Move_1.default.create(Pos(2, posY(pos)), pos, 0, 1));\r\n                    if (this.canCastle(pos, color, 1))\r\n                        moves.push(Move_1.default.create(Pos(6, posY(pos)), pos, 0, 1));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return moves;\r\n    }\r\n    canCastle(pos, color, dx) {\r\n        return this.rookVisible(pos, color, dx) && !this.passesThroughCheck(pos, color, dx);\r\n    }\r\n    rookVisible(pos, color, dx) {\r\n        let x = posX(pos);\r\n        let y = posY(pos);\r\n        while (x >= 0 && x <= 7) {\r\n            x += dx;\r\n            let piece = this.pieces[Pos(x, y)];\r\n            let type = Piece_1.default.get.type(piece);\r\n            if (type != Type_1.Type.Empty)\r\n                return type === Type_1.Type.Rook && !Piece_1.default.get.moved(piece) && Piece_1.default.get.color(piece) === color;\r\n        }\r\n        return false;\r\n    }\r\n    passesThroughCheck(pos, color, dx) {\r\n        let x = posX(pos);\r\n        let y = posY(pos);\r\n        for (let i = 0; i < 2; i++)\r\n            if (!this.isSafe(Pos(x + i * dx, y), color))\r\n                return true;\r\n        return false;\r\n    }\r\n    tryCastle(to, from, undo) {\r\n        let dx = posX(to) - posX(from);\r\n        if (Math.abs(dx) < 2)\r\n            return;\r\n        let y = posY(to);\r\n        let rookFrom = Pos(dx > 0 ? 7 : 0, y);\r\n        let rookTo = Pos(posX(to) - Math.sign(dx), y);\r\n        if (undo) {\r\n            let rook = this.pieces[rookTo];\r\n            this.pieces[rookFrom] = Piece_1.default.set.moved(rook, 0);\r\n            this.pieces[rookTo] = EMPTY;\r\n            this.swapIds(rookFrom, rookTo);\r\n        }\r\n        else {\r\n            let rook = this.pieces[rookFrom];\r\n            this.pieces[rookFrom] = EMPTY;\r\n            this.pieces[rookTo] = Piece_1.default.set.moved(rook, 1);\r\n            this.swapIds(rookFrom, rookTo);\r\n        }\r\n    }\r\n    setPiece(pos, piece) {\r\n        let captured = this.pieces[pos];\r\n        this.netMaterialValue -= pieceValues_1.default[Piece_1.default.get.type(captured)] * (Piece_1.default.get.color(captured) == Color_1.Color.White ? 1 : -1);\r\n        this.netMaterialValue += pieceValues_1.default[Piece_1.default.get.type(piece)] * (Piece_1.default.get.color(piece) == Color_1.Color.White ? 1 : -1);\r\n        this.pieces[pos] = piece;\r\n    }\r\n    swapIds(p, q) {\r\n        let tmp = this.ids[p];\r\n        this.ids[p] = this.ids[q];\r\n        this.ids[q] = tmp;\r\n    }\r\n    doMove(move) {\r\n        this.history.push(move);\r\n        let from = Move_1.default.get.from(move);\r\n        let to = Move_1.default.get.to(move);\r\n        let piece = Piece_1.default.set.moved(this.pieces[from], 1);\r\n        if (Move_1.default.get.promotion(move))\r\n            piece = Piece_1.default.set.type(piece, Type_1.Type.Queen);\r\n        this.setPiece(from, EMPTY);\r\n        this.setPiece(to, piece);\r\n        this.turn = (this.turn + 1) % 2;\r\n        this.swapIds(to, from);\r\n        if (Piece_1.default.get.type(piece) === Type_1.Type.King)\r\n            this.tryCastle(to, from, false);\r\n    }\r\n    undoMove() {\r\n        let move = this.history.pop();\r\n        let from = Move_1.default.get.from(move);\r\n        let to = Move_1.default.get.to(move);\r\n        let piece = Piece_1.default.set.moved(this.pieces[to], Move_1.default.get.firstMove(move) ? 0 : 1);\r\n        if (Move_1.default.get.promotion(move))\r\n            piece = Piece_1.default.set.type(piece, Type_1.Type.Pawn);\r\n        this.setPiece(from, piece);\r\n        this.setPiece(to, Move_1.default.get.captured(move));\r\n        this.turn = (this.turn + 1) % 2;\r\n        this.swapIds(to, from);\r\n        if (Piece_1.default.get.type(piece) === Type_1.Type.King)\r\n            this.tryCastle(to, from, true);\r\n    }\r\n    generateMovesAt(pos, selfCaptures = false) {\r\n        let piece = this.pieces[pos];\r\n        let moves = this.generateMoves(pos, Piece_1.default.get.type(piece), Piece_1.default.get.color(piece), Piece_1.default.get.moved(piece), selfCaptures, Ternary.either);\r\n        if (!Piece_1.default.get.moved(piece))\r\n            for (let i = 0; i < moves.length; i++)\r\n                moves[i] = Move_1.default.set.firstMove(moves[i], 1);\r\n        return moves;\r\n    }\r\n    generateSafeMovesAt(pos) {\r\n        let piece = this.pieces[pos];\r\n        let color = Piece_1.default.get.color(piece);\r\n        return this.filterByKingSafety(color, this.generateMovesAt(pos));\r\n    }\r\n    // This can be slow because it is only used by filterByKingSafetly.\r\n    kingPos(turn) {\r\n        for (let i = 0; i < 64; i++) {\r\n            let p = this.pieces[i];\r\n            if (Piece_1.default.get.type(p) === Type_1.Type.King && Piece_1.default.get.color(p) === turn)\r\n                return i;\r\n        }\r\n        return null;\r\n        // throw new Error(`Missing ${turn} king.`)\r\n    }\r\n    // This can be slow because it's not used in the search algorithm.\r\n    // Because of the piece value of the king, this check would be redundant.\r\n    filterByKingSafety(turn, moves) {\r\n        let result = [];\r\n        for (let move of moves) {\r\n            this.doMove(move);\r\n            let kingPos = this.kingPos(turn);\r\n            if (kingPos == null || this.isSafe(kingPos, turn))\r\n                result.push(move);\r\n            this.undoMove();\r\n        }\r\n        return result;\r\n    }\r\n    // Capturing moves are direction reversible so it's OK to scan from the friendly piece to the enemy pieces.\r\n    // If we do this for each type, we can be sure no pieces threaten our piece.\r\n    // If we can 'capture' them, they can capture us.\r\n    isSafe(pos, color) {\r\n        for (let type = Type_1.Type.Pawn; type <= Type_1.Type.King; type++) {\r\n            let moves = this.generateMoves(pos, type, color, 1, false, Ternary.always);\r\n            for (let move of moves) {\r\n                let piece = this.pieces[Move_1.default.get.to(move)];\r\n                if (Piece_1.default.get.type(piece) === type)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    allMoves(safe = false) {\r\n        let moves = [];\r\n        for (let x = 0; x < 8; x++) {\r\n            for (let y = 0; y < 8; y++) {\r\n                let pos = Pos(x, y);\r\n                let piece = this.pieces[pos];\r\n                if (Piece_1.default.get.color(piece) !== this.turn || Piece_1.default.get.type(piece) === Type_1.Type.Empty)\r\n                    continue;\r\n                let _moves = safe ? this.generateSafeMovesAt(pos) : this.generateMovesAt(pos);\r\n                for (let move of _moves)\r\n                    moves.push(move);\r\n            }\r\n        }\r\n        return moves;\r\n    }\r\n    inCheck(turn = this.turn) {\r\n        let pos = this.kingPos(turn);\r\n        return (pos === null) ? false : !this.isSafe(pos, turn);\r\n    }\r\n    inMate() {\r\n        return this.allMoves(true).length === 0;\r\n    }\r\n}\r\nexports.Engine = Engine;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst bitfield_1 = __importDefault(require(\"./bitfield\"));\r\nexports.default = bitfield_1.default([\r\n    [\"to\", 6],\r\n    [\"from\", 6],\r\n    [\"captured\", 5],\r\n    [\"firstMove\", 1],\r\n    [\"promotion\", 1]\r\n]);\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst bitfield_1 = __importDefault(require(\"./bitfield\"));\r\nlet s = bitfield_1.default([\r\n    [\"type\", 3],\r\n    [\"color\", 1],\r\n    [\"moved\", 1]\r\n]);\r\nexports.default = s;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst bitfield_1 = __importDefault(require(\"./bitfield\"));\r\nlet s = bitfield_1.default([\r\n    [\"x\", 3],\r\n    [\"y\", 3]\r\n]);\r\nexports.default = s;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Type;\r\n(function (Type) {\r\n    Type[Type[\"Empty\"] = 0] = \"Empty\";\r\n    Type[Type[\"Pawn\"] = 1] = \"Pawn\";\r\n    Type[Type[\"Knight\"] = 2] = \"Knight\";\r\n    Type[Type[\"Bishop\"] = 3] = \"Bishop\";\r\n    Type[Type[\"Rook\"] = 4] = \"Rook\";\r\n    Type[Type[\"Queen\"] = 5] = \"Queen\";\r\n    Type[Type[\"King\"] = 6] = \"King\";\r\n})(Type = exports.Type || (exports.Type = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst mask = (width) => (1 << width) - 1;\r\nfunction propertiesWithShift(properties) {\r\n    let shift = 0;\r\n    let result = [];\r\n    for (let [name, width] of properties) {\r\n        result.push([name, width, shift]);\r\n        shift += width;\r\n    }\r\n    return result;\r\n}\r\nfunction fromArguments(properties) {\r\n    let names = properties.map((component) => component[0]);\r\n    let parts = properties.map(([name, width, shift]) => `(${name} << ${shift})`);\r\n    let result = new Function(...names, \"return \" + parts.join(\" | \"));\r\n    return result;\r\n}\r\nfunction fromObject(properties) {\r\n    let parts = properties.map(([name, width, shift]) => `(object.${name} << ${shift})`);\r\n    let result = new Function(\"object\", \"return \" + parts.join(\" | \"));\r\n    return result;\r\n}\r\nfunction toObject(properties) {\r\n    let parts = properties.map(([name, width, shift]) => `${name}: (struct >> ${shift}) & ${mask(width)}`);\r\n    let result = new Function(\"struct\", `return { ${parts.join(\" , \")} }`);\r\n    return result;\r\n}\r\nfunction struct(properties) {\r\n    let bitCount = properties.map((component) => component[1]).reduce((x, y) => x + y);\r\n    if (bitCount > 32)\r\n        throw new Error(\"Components don't fit 32 bit number.\");\r\n    let _properties = propertiesWithShift(properties);\r\n    let get = {};\r\n    let set = {};\r\n    for (let [name, width, shift] of _properties) {\r\n        let getMask = mask(width);\r\n        get[name] = (struct) => (struct >> shift) & getMask;\r\n        let setMask = ~(getMask << shift); // Used to clear components bits.\r\n        set[name] = (struct, value) => (struct & setMask) | ((value & getMask) << shift);\r\n    }\r\n    return { create: fromArguments(_properties), toObject: toObject(_properties), fromObject: fromObject(_properties), get, set };\r\n}\r\nexports.default = struct;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Color_1 = require(\"./Color\");\r\nconst Piece_1 = __importDefault(require(\"./Piece\"));\r\nconst pieceToCharStr = \".pnbrqk\";\r\nfunction pieceToChar(piece) {\r\n    let char = pieceToCharStr[Piece_1.default.get.type(piece)];\r\n    return Piece_1.default.get.color(piece) === Color_1.Color.Black ? char : char.toUpperCase();\r\n}\r\nexports.pieceToChar = pieceToChar;\r\nfunction charToPiece(char) {\r\n    let type = pieceToCharStr.indexOf(char.toLowerCase());\r\n    let color = (char === char.toLowerCase()) ? Color_1.Color.Black : Color_1.Color.White;\r\n    return Piece_1.default.create(type, color, 0);\r\n}\r\nexports.charToPiece = charToPiece;\r\nexports.default = { pieceToChar, charToPiece };\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = [\r\n    0,\r\n    1,\r\n    3,\r\n    3,\r\n    5,\r\n    9,\r\n    99999 // King\r\n];\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Position_1 = __importDefault(require(\"./Position\"));\r\nconst Piece_1 = __importDefault(require(\"./Piece\"));\r\nconst Move_1 = __importDefault(require(\"./Move\"));\r\nconst pieceValues_1 = __importDefault(require(\"./pieceValues\"));\r\nconst Type_1 = require(\"./Type\");\r\nconst Color_1 = require(\"./Color\");\r\nconst Pos = Position_1.default.create;\r\nconst MAX_VALUE = Number.MAX_SAFE_INTEGER; // Infinity\r\nfunction default_1(engine, options = {}) {\r\n    options = Object.assign({ depth: 40, rootCall: true, maxSeconds: 5 }, options);\r\n    let startTime = Date.now();\r\n    let endTime = startTime + options.maxSeconds * 1000;\r\n    let evaluations = 0;\r\n    let cache = options.cache || new Map();\r\n    const heuristic = (useFast) => {\r\n        evaluations++;\r\n        const config = {\r\n            material: 10,\r\n            control: 5,\r\n            threat: 1,\r\n            threateningPieces: 1,\r\n            development: 5,\r\n            support: 5\r\n        };\r\n        if (engine.inCheck() && engine.inMate())\r\n            return engine.turn == Color_1.Color.White ? -MAX_VALUE : MAX_VALUE;\r\n        if (useFast)\r\n            return engine.netMaterialValue * config.material;\r\n        if (engine.inMate())\r\n            return 0;\r\n        let control = 0;\r\n        let threat = 0;\r\n        let threateningPieces = 0;\r\n        let development = 0;\r\n        let support = 0;\r\n        const edgeDistance = (pos) => {\r\n            let xDist = 3.5 - Math.abs(Position_1.default.get.x(pos) - 3.5);\r\n            let yDist = 3.5 - Math.abs(Position_1.default.get.y(pos) - 3.5);\r\n            return xDist + yDist;\r\n        };\r\n        for (let pos = 0; pos < 64; pos++) {\r\n            let piece = engine.pieces[pos];\r\n            let type = Piece_1.default.get.type(piece);\r\n            if (type === Type_1.Type.Empty)\r\n                continue;\r\n            let invPieceValue = 1 / pieceValues_1.default[type];\r\n            let color = Piece_1.default.get.color(piece);\r\n            let valueSign = color === Color_1.Color.White ? 1 : -1;\r\n            development += edgeDistance(pos) * invPieceValue * valueSign;\r\n            if (type === Type_1.Type.Pawn) {\r\n                let pawnDevelopment = (color == Color_1.Color.White) ? 7 - Position_1.default.get.y(pos) : Position_1.default.get.y(pos);\r\n                development += Math.max(8, 1.5 ** pawnDevelopment) * valueSign;\r\n            }\r\n            let threatening = false;\r\n            for (let move of engine.generateMovesAt(pos, true)) {\r\n                let capturedType = Piece_1.default.get.type(Move_1.default.get.captured(move));\r\n                let capturedColor = Piece_1.default.get.color(Move_1.default.get.captured(move));\r\n                let captured = capturedType !== Type_1.Type.Empty;\r\n                if (captured && capturedColor == color) {\r\n                    support += valueSign * invPieceValue / pieceValues_1.default[capturedType];\r\n                }\r\n                else {\r\n                    let to = Move_1.default.get.to(move);\r\n                    control += (1 + edgeDistance(to) * invPieceValue) * valueSign;\r\n                    if (captured) {\r\n                        threatening = true;\r\n                        let value = capturedType == Type_1.Type.King ? 10 : pieceValues_1.default[capturedType] * invPieceValue;\r\n                        threat += valueSign * value;\r\n                    }\r\n                }\r\n            }\r\n            if (threatening)\r\n                threateningPieces += valueSign;\r\n        }\r\n        return engine.netMaterialValue * config.material\r\n            + control * config.control\r\n            + threat * config.threat\r\n            + threateningPieces * config.threateningPieces\r\n            + development * config.development\r\n            + support * config.support;\r\n    };\r\n    const search = (depth = 0, rootCall = true, alpha = options.alpha || -MAX_VALUE, beta = options.beta || MAX_VALUE) => {\r\n        let turn = engine.turn;\r\n        let valueSign = (engine.turn === Color_1.Color.White) ? 1 : -1;\r\n        let positionString = engine.positionString() + depth + \",\" + turn;\r\n        if (!rootCall && cache.has(positionString))\r\n            return cache.get(positionString);\r\n        let pairs = engine.allMoves(true).map((move) => {\r\n            engine.doMove(move);\r\n            let h = heuristic(depth < 3);\r\n            engine.undoMove();\r\n            return [move, h];\r\n        });\r\n        pairs.sort((a, b) => ((b[1] - a[1]) * valueSign));\r\n        let best = null;\r\n        let bestValue = -MAX_VALUE * valueSign;\r\n        let cutoff = false;\r\n        for (let [move, h] of pairs) {\r\n            if (Date.now() > endTime)\r\n                break;\r\n            let value = 0;\r\n            engine.doMove(move);\r\n            value = depth == 1 ? h : search(depth - 1, false, alpha, beta);\r\n            // The advanced heuristic is too slow to use on leaves so instead it's evaluated on the parent.\r\n            if (depth == 3)\r\n                value += heuristic(false);\r\n            if (best === null || value * valueSign > bestValue * valueSign) {\r\n                best = move;\r\n                bestValue = value;\r\n                if (turn === Color_1.Color.White)\r\n                    alpha = Math.max(alpha, bestValue);\r\n                else\r\n                    beta = Math.min(beta, bestValue);\r\n                cutoff = (alpha >= beta);\r\n            }\r\n            engine.undoMove();\r\n            if (cutoff)\r\n                break;\r\n        }\r\n        cache.set(positionString, bestValue);\r\n        return rootCall ? [best, bestValue] : bestValue;\r\n    };\r\n    let result, resultValue, depthReached;\r\n    for (let d = 3; d <= options.depth; d++) {\r\n        let _ = search(d);\r\n        if (Date.now() > endTime)\r\n            break;\r\n        [result, resultValue] = _;\r\n        depthReached = d;\r\n    }\r\n    if (options.rootCall) {\r\n        let dt = (Date.now() - startTime);\r\n        let addCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        let evalsPerMs = (evaluations / dt).toString().split(\".\")[0];\r\n        console.log(`${addCommas(evaluations)} evals | ${addCommas(dt)} ms | ${addCommas(evalsPerMs)} evals/ms | depth ${depthReached} reached`);\r\n    }\r\n    return options.rootCall ? result : resultValue;\r\n}\r\nexports.default = default_1;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Model_1 = __importDefault(require(\"@glas/platform/data/Model\"));\r\nconst Entity_1 = __importDefault(require(\"@glas/platform/data/Entity\"));\r\nconst Engine_1 = require(\"../engine/Engine\");\r\nconst Store_1 = __importDefault(require(\"@glas/platform/data/Store\"));\r\nlet Game = class Game extends Entity_1.default {\r\n    doMove(move) {\r\n        let history = this.history.slice();\r\n        history.push(move);\r\n        Store_1.default.default.patch(this.key, { history, undos: [] });\r\n    }\r\n    undoMove() {\r\n        let history = this.history.slice();\r\n        let undos = this.undos.slice();\r\n        let undo = history.pop();\r\n        if (undo != null)\r\n            undos.push(undo);\r\n        Store_1.default.default.patch(this.key, { history, undos });\r\n    }\r\n    redoMove() {\r\n        let history = this.history.slice();\r\n        let undos = this.undos.slice();\r\n        let redo = undos.pop();\r\n        if (redo != null)\r\n            history.push(redo);\r\n        Store_1.default.default.patch(this.key, { history, undos });\r\n    }\r\n    get engine() {\r\n        return Engine_1.Engine.fromHistory(this.history);\r\n    }\r\n};\r\n// static readonly store = \"server\"\r\nGame.store = \"local\";\r\n__decorate([\r\n    Model_1.default.property({\r\n        type: \"array\",\r\n        items: {\r\n            type: \"number\"\r\n        },\r\n        default: []\r\n    })\r\n], Game.prototype, \"history\", void 0);\r\n__decorate([\r\n    Model_1.default.property({\r\n        type: \"array\",\r\n        items: {\r\n            type: \"number\"\r\n        },\r\n        default: []\r\n    })\r\n], Game.prototype, \"undos\", void 0);\r\nGame = __decorate([\r\n    Model_1.default.class()\r\n], Game);\r\nexports.default = Game;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar AppState_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Context_1 = __importDefault(require(\"@glas/platform/ui/Context\"));\r\nconst Key_1 = __importDefault(require(\"@glas/platform/data/Key\"));\r\nconst html_1 = require(\"@glas/platform/ui/html\");\r\nconst Model_1 = __importDefault(require(\"@glas/platform/data/Model\"));\r\nconst State_1 = __importDefault(require(\"@glas/platform/data/State\"));\r\nconst invoke_1 = __importDefault(require(\"@glas/platform/server/invoke\"));\r\nconst WindowSize_1 = __importDefault(require(\"@glas/platform/ui/input/WindowSize\"));\r\nconst Engine_1 = require(\"../engine/Engine\");\r\nconst Position_1 = __importDefault(require(\"../engine/Position\"));\r\nconst Piece_1 = __importDefault(require(\"../engine/Piece\"));\r\nconst Type_1 = require(\"../engine/Type\");\r\nconst Color_1 = require(\"../engine/Color\");\r\nconst Move_1 = __importDefault(require(\"../engine/Move\"));\r\nconst Game_1 = __importDefault(require(\"../model/Game\"));\r\nconst search_1 = __importDefault(require(\"../engine/search\"));\r\nconst Store_1 = __importDefault(require(\"@glas/platform/data/Store\"));\r\nconst pieces_1 = __importDefault(require(\"./pieces\"));\r\nconst WHITE = \"darkseagreen\";\r\nconst BLACK = \"seagreen\";\r\nconst OUTLINE = \"#256F46\";\r\nlet AppState = AppState_1 = class AppState extends State_1.default {\r\n};\r\nAppState.store = \"memory\";\r\nAppState.key = Key_1.default.create(AppState_1, \"0\");\r\n__decorate([\r\n    Model_1.default.property({ type: \"number\", default: -1 })\r\n], AppState.prototype, \"selectX\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"number\", default: -1 })\r\n], AppState.prototype, \"selectY\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"number\", default: -1 })\r\n], AppState.prototype, \"hoverX\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"number\", default: -1 })\r\n], AppState.prototype, \"hoverY\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"boolean\", default: false })\r\n], AppState.prototype, \"rotate\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"boolean\", default: false })\r\n], AppState.prototype, \"debug\", void 0);\r\n__decorate([\r\n    Model_1.default.property({ type: \"boolean\", default: false })\r\n], AppState.prototype, \"thinking\", void 0);\r\nAppState = AppState_1 = __decorate([\r\n    Model_1.default.class()\r\n], AppState);\r\n// TODO: Fix the search api. It broke after porting to the new glass.\r\nvar LOCAL_AI = true;\r\nfunction think(gameKey) {\r\n    let game = Store_1.default.default.get(gameKey);\r\n    let engine = game.engine;\r\n    if (engine.inMate())\r\n        return;\r\n    Store_1.default.default.patch(AppState.key, { selectX: -1, selectY: -1, thinking: true });\r\n    let finish = move => {\r\n        if (typeof move == \"number\")\r\n            game.doMove(move);\r\n        Store_1.default.default.patch(AppState.key, { selectX: -1, selectY: -1, thinking: false });\r\n    };\r\n    if (LOCAL_AI)\r\n        setTimeout(() => finish(search_1.default(engine)), 100);\r\n    else\r\n        invoke_1.default(\"/api/search\", { position: engine.toString() }).then(move => finish(move));\r\n}\r\nfunction getSortedPieces(engine) {\r\n    let result = [];\r\n    for (let p = 0; p < 64; p++) {\r\n        let piece = engine.pieces[p];\r\n        result.push({ position: p, piece, id: engine.ids[p] });\r\n    }\r\n    return result.sort((p, q) => p.id - q.id);\r\n}\r\nconst board = Context_1.default.component(function board(c, properties) {\r\n    let store = Store_1.default.default;\r\n    let appState = store.get(AppState.key);\r\n    let { selectX, selectY } = appState;\r\n    let { gameKey } = properties;\r\n    let game = store.get(gameKey);\r\n    let engine = game.engine;\r\n    let selectPos = Position_1.default.create(selectX, selectY);\r\n    let moves = engine.generateSafeMovesAt(selectPos);\r\n    let selection = {};\r\n    for (let move of moves)\r\n        selection[Move_1.default.get.to(move)] = move;\r\n    let rotate = appState.rotate;\r\n    html_1.div({\r\n        class: \"Board\" + (rotate ? \" Rotated\" : \"\"),\r\n        content: () => {\r\n            // Squares\r\n            for (let x = 0; x < 8; x++) {\r\n                for (let y = 0; y < 8; y++) {\r\n                    let pos = Position_1.default.create(x, y);\r\n                    let piece = Piece_1.default.toObject(engine.pieces[pos]);\r\n                    let move = selection[pos];\r\n                    let highlighted = move !== undefined;\r\n                    let selected = x == selectX && y == selectY;\r\n                    let color = (x + y) % 2 == 0 ? WHITE : BLACK;\r\n                    html_1.div({\r\n                        class: `Square ${highlighted ? \"Square_highlighted\" : \"\"}`,\r\n                        style: `\r\n                                left: ${x * 100 / 8}%;\r\n                                top: ${y * 100 / 8}%;\r\n                                background: ${color}; `,\r\n                        onclick() {\r\n                            if (selected) {\r\n                                store.patch(AppState.key, { selectX: -1, selectY: -1 });\r\n                            }\r\n                            else if (highlighted && !appState.thinking) {\r\n                                game.doMove(move);\r\n                                store.patch(AppState.key, { selectX: -1, selectY: -1 });\r\n                                // think(gameKey)\r\n                            }\r\n                            else {\r\n                                if (piece.color === engine.turn || appState.debug)\r\n                                    store.patch(AppState.key, { selectX: x, selectY: y });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            // Pieces\r\n            let pieces = getSortedPieces(engine);\r\n            for (let guiPiece of pieces) {\r\n                let piece = Piece_1.default.toObject(guiPiece.piece);\r\n                let { x, y } = Position_1.default.toObject(guiPiece.position);\r\n                let colorName = Color_1.Color[piece.color];\r\n                let typeName = Type_1.Type[piece.type];\r\n                let pieceName = colorName.toLowerCase() + typeName;\r\n                let highlighted = selection[guiPiece.position] !== undefined;\r\n                let selected = x == selectX && y == selectY;\r\n                html_1.div({\r\n                    class: \"Square\",\r\n                    style: `\r\n                            left: ${x * 100 / 8}%;\r\n                            top: ${y * 100 / 8}%;\r\n                            opacity: ${piece.type == Type_1.Type.Empty ? 0 : 1};\r\n                            transition: all 0.25s ease-in-out;\r\n                            z-index: ${piece.type == Type_1.Type.Knight ? 3 : 2};\r\n                            pointer-events: none`,\r\n                    content: () => {\r\n                        if (piece.type != Type_1.Type.Empty) {\r\n                            html_1.img({\r\n                                src: pieces_1.default[pieceName],\r\n                                class: `Piece ${(selected || highlighted) ? \"Piece_highlighted\" : \"\"} ${rotate ? \" Rotated\" : \"\"}`,\r\n                                draggable: false\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\nContext_1.default.bind(c => {\r\n    let store = Store_1.default.default;\r\n    let appState = store.get(AppState.key);\r\n    let windowSize = c.store.get(WindowSize_1.default.key);\r\n    const gameKey = Key_1.default.create(Game_1.default, \"0\");\r\n    let w = window;\r\n    if (!w.load) {\r\n        w.load = (s) => {\r\n            let engine = Engine_1.Engine.fromString(s);\r\n            store.patch(gameKey, { history: engine.history, undos: [] });\r\n            store.patch(AppState.key, { selectX: -1, selectY: -1 });\r\n        };\r\n    }\r\n    let boardWidth = Math.min((windowSize.height - 124), windowSize.width);\r\n    html_1.div({\r\n        class: \"Game\",\r\n        style: `\r\n            display: grid;\r\n            grid-template-columns: auto ${boardWidth}px auto;\r\n            grid-template-rows: 80px ${boardWidth}px 40px;`,\r\n        content() {\r\n            html_1.style(`\r\n                .Game {\r\n                    width: 100vw;\r\n                    height: 100vh;\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 0px;\r\n                    user-select: none;\r\n                    background: #262626;\r\n                    color: white;\r\n                }\r\n\r\n                .Board {\r\n                    position: relative;\r\n                    grid-column: 2 / 2;\r\n                    grid-row: 2 / 2;\r\n                    background: white;\r\n                    overflow: hidden;\r\n                    border-radius: 8px;\r\n                    box-shadow: 8px 8px 8px rgba(0, 0, 0, 0.1);\r\n                    transition: transform .5s ease-in-out;\r\n                }\r\n\r\n                .Rotated {\r\n                    transform:rotate(180deg);\r\n                }\r\n\r\n                .Square {\r\n                    position: absolute;\r\n                    width: calc(100% / 8);\r\n                    height: calc(100% / 8);\r\n                    display: flex;\r\n                }\r\n\r\n                .Square_highlighted {\r\n                    filter: saturate(125%) brightness(130%);\r\n                    box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\r\n                    z-index: 1;\r\n                    margin-left: 1.5px;\r\n                    margin-top: 1.5px;\r\n                    outline: ${OUTLINE} 3px solid;\r\n                    width: calc(100% / 8 - 3px);\r\n                    height: calc(100% / 8 - 3px);\r\n                }\r\n\r\n                .Piece {\r\n                    flex-grow: 1;\r\n                    transition: transform .7s ease-in-out;\r\n                }\r\n\r\n                .Piece_highlighted {\r\n                    filter: drop-shadow(4px 4px 8px rgba(0, 0, 0, 0.5));\r\n                }\r\n            `);\r\n            html_1.div({ style: \"grid-column: 2 / 2\", content: () => html_1.h1(\"Glass Chess\") });\r\n            let game = store.get(gameKey);\r\n            if (!game) {\r\n                if (Game_1.default.store != \"server\" || game === null)\r\n                    store.patch(gameKey, new Game_1.default({ key: gameKey }));\r\n                html_1.div({ style: \"padding: 4px; grid-column: 2 / 2; grid-row: 2 / 2\", content: \"Loading game...\" });\r\n            }\r\n            else {\r\n                let engine = game.engine;\r\n                let check = engine.inCheck();\r\n                let mate = engine.inMate();\r\n                board({ gameKey });\r\n                html_1.div({\r\n                    style: \"display: flex; padding: 8px; height: 20pt; grid-column: 2 / 2; grid-row: 3 / 3\",\r\n                    content: () => {\r\n                        if (!mate)\r\n                            html_1.span(`Turn: ${Color_1.Color[engine.turn]}${check ? \", Check\" : \"\"}`);\r\n                        else\r\n                            html_1.span(check ? \"Checkmate!\" : \"Stalemate!\");\r\n                        html_1.div({ style: \"flex-grow: 1\" });\r\n                        html_1.button({\r\n                            onclick: () => store.patch(AppState.key, { rotate: !appState.rotate }),\r\n                            content: \"Rotate\"\r\n                        });\r\n                        html_1.button({\r\n                            disabled: appState.thinking || (game.history.length < 1 && game.undos.length < 1),\r\n                            onclick() {\r\n                                if (confirm(\"Reset game?\")) {\r\n                                    store.patch(gameKey, { history: [], undos: [] });\r\n                                    store.patch(AppState.key, { selectX: -1, selectY: -1 });\r\n                                }\r\n                            },\r\n                            content: \"Reset\"\r\n                        });\r\n                        html_1.button({\r\n                            disabled: appState.thinking || game.history.length < 1,\r\n                            onclick() {\r\n                                game.undoMove();\r\n                                store.patch(AppState.key, { selectX: -1, selectY: -1 });\r\n                            },\r\n                            content: \"Undo\"\r\n                        });\r\n                        html_1.button({\r\n                            disabled: appState.thinking || game.undos.length < 1,\r\n                            onclick() {\r\n                                game.redoMove();\r\n                                store.patch(AppState.key, { selectX: -1, selectY: -1 });\r\n                            },\r\n                            content: \"Redo\"\r\n                        });\r\n                        html_1.button({\r\n                            disabled: mate || appState.thinking,\r\n                            onclick: () => think(gameKey),\r\n                            content: appState.thinking ? \"Thinking...\" : \"Think\"\r\n                        });\r\n                    }\r\n                });\r\n                if (check && mate && engine.history.length <= 10) {\r\n                    html_1.iframe({\r\n                        style: \"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 4\",\r\n                        width: 560, height: 315, src: \"https://www.youtube.com/embed/0xKBsYVCdDk?autoplay=1\",\r\n                        frameborder: \"0\", allow: \"autoplay; picture-in-picture\"\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","module.exports = __webpack_public_path__ + \"df256cb41e62c8d8190ba1efbb0441b8.svg\";","module.exports = __webpack_public_path__ + \"a98c8b076fced614be051a0894b30a3a.svg\";","module.exports = __webpack_public_path__ + \"c66000332c1e4320badc73c4960f5278.svg\";","module.exports = __webpack_public_path__ + \"1b9cc35c3399f765cd9e22153e40cf1e.svg\";","module.exports = __webpack_public_path__ + \"5ee93cfca3a889f3426afca8d910d5e8.svg\";","module.exports = __webpack_public_path__ + \"f4c02b9b7b14ee9d5484bd1a420df1b9.svg\";","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst blackBishop_svg_1 = __importDefault(require(\"./blackBishop.svg\"));\r\nconst blackKing_svg_1 = __importDefault(require(\"./blackKing.svg\"));\r\nconst blackKnight_svg_1 = __importDefault(require(\"./blackKnight.svg\"));\r\nconst blackPawn_svg_1 = __importDefault(require(\"./blackPawn.svg\"));\r\nconst blackQueen_svg_1 = __importDefault(require(\"./blackQueen.svg\"));\r\nconst blackRook_svg_1 = __importDefault(require(\"./blackRook.svg\"));\r\nconst whiteBishop_svg_1 = __importDefault(require(\"./whiteBishop.svg\"));\r\nconst whiteKing_svg_1 = __importDefault(require(\"./whiteKing.svg\"));\r\nconst whiteKnight_svg_1 = __importDefault(require(\"./whiteKnight.svg\"));\r\nconst whitePawn_svg_1 = __importDefault(require(\"./whitePawn.svg\"));\r\nconst whiteQueen_svg_1 = __importDefault(require(\"./whiteQueen.svg\"));\r\nconst whiteRook_svg_1 = __importDefault(require(\"./whiteRook.svg\"));\r\nexports.default = {\r\n    blackBishop: blackBishop_svg_1.default,\r\n    blackKing: blackKing_svg_1.default,\r\n    blackKnight: blackKnight_svg_1.default,\r\n    blackPawn: blackPawn_svg_1.default,\r\n    blackQueen: blackQueen_svg_1.default,\r\n    blackRook: blackRook_svg_1.default,\r\n    whiteBishop: whiteBishop_svg_1.default,\r\n    whiteKing: whiteKing_svg_1.default,\r\n    whiteKnight: whiteKnight_svg_1.default,\r\n    whitePawn: whitePawn_svg_1.default,\r\n    whiteRook: whiteRook_svg_1.default,\r\n    whiteQueen: whiteQueen_svg_1.default\r\n};\r\n","module.exports = __webpack_public_path__ + \"25fd55d032c3cc0aeb15b89ffdfd01ce.svg\";","module.exports = __webpack_public_path__ + \"29d92e646e03b815f8160d5bb2e56343.svg\";","module.exports = __webpack_public_path__ + \"a2c477d2f050bb0dea697a776a8f17fc.svg\";","module.exports = __webpack_public_path__ + \"9d8cff0861080140dd480aa1efe52134.svg\";","module.exports = __webpack_public_path__ + \"2b51c5914fd5dbfc67fa4bb90a598509.svg\";","module.exports = __webpack_public_path__ + \"8a34e84060da1a54eb39ba8575e3f86f.svg\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClldA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpzrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvtvrjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACthIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtnhrTA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}